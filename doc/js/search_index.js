var search_data = {"index":{"searchIndex":["addattendretreat","addcandidatecolumns","addcandidateinformationsheet","addcandidatenotetocandidates","addchristianministryevent","addcolumnfirstcommatstmm","addconfirmabletodevise","addconfirmationname","addconfirmationnametocandidate","addcovenantagreement","addfilecolumnstosponsorcovenants","addinstructionstoconfirmationevent","addmiddlenametocandidatesheet","addnametoadmins","addnametousers","addparentinformationmeeting","addpickconfirmationnameevent","addsignedagreementtocandidate","addsponsorcandidateconfirmationevent","addsponsorcovenant","address","admin","adminscontroller","appfactory","applicationcontroller","applicationhelper","applicationrecord","attributescontroller","baptismalcertificate","candidate","candidateevent","candidateimport","candidateimportscontroller","candidateimportshelper","candidatepdfdocument","candidatesheet","candidatescontroller","candidatesmailer","candidatesmailertext","changedefaultvalueofbaptizedatstmm","changedefaultvaluetoaddresscity","changeeventnamesponsorcovenant","changeretreatfilecontentinretreatverification","christianministry","commoncandidatescontroller","confirmation","application","confirmationevent","controllermacros","createaddresses","createbaptismalcertificates","createcandidateevents","createcandidatesheets","createconfirmationeventcandidateevents","createconfirmationevents","createretreatverifications","createscannedimages","createvisitors","customdevisemailer","descriptionscontroller","dev","candaccountconfirmationscontroller","candidatescontroller","passwordscontroller","registrationscontroller","devisecreateadmins","devisecreateusers","devisehelpers","devisehelpersadmin","devisehelpersnew","devisepermittedparameters","deviserails5helpers","capybara","node","simple","dummygoodresponse","emailstuff","event","document","other","route","eventcompletevalidator","exportexcelcandjob","exportexceljob","exportexceljobspec","exportlistscontroller","features","sessionhelpers","filehelper","initializechsduedate","initializechsduedatesave","mailpart","methoddocrange","migrateandremoveoldimages","noargscontroller","nocommentcontroller","object","offlineresponse","parameterscontroller","paramsgreaterthanargscontroller","paramslessthanargscontroller","parmnamedoesnotmatchargumentnamecontroller","pickconfirmationname","pluckcan","registrationscontroller","registrationshelper","removechristianministryfilenamefromchristianministries","removeconfirmationfromcandidates","removepickconfirmationnamefilenamefrompickconfirmationnames","removesponsoragreementfromcandidates","renameadminconfirmedtoverified","renamecandiatescolumncandiateid","renameduedatetothewayduedate","renamefilloutcandidateinformationsheet","renamepickconfirmationname","renamesignagreement","renameuploadbaptismalcertificate","renameusertocandidate","retreatverification","returnscontroller","rubocop","cop","style","publicmethoddocumentation","team","scannedimage","sendemailjob","sendgridmail","sendgridmailspec","sendresetemailjob","sidebar","sortingcandlisthelpers","sponsorcovenant","todo","viewshelpers","visitor","visitorscontroller","about()","about_app()","account_confirmed?()","account_name()","active_tab_class()","add_baptismal_certificate_image()","add_candidate_event()","add_candidate_events()","add_confirmation_event()","add_confirmation_event_due_date()","add_missing_events()","add_orphaned_table_rows()","add_retreat_verification_image()","add_sponsor_covenant_image()","add_sponsor_eligibility_image()","add_wb()","adhoc()","adhoc()","adhoc_mailing()","adhoc_mailing_update()","adhoc_test()","adhoc_test()","admin?()","admin?()","after_confirmation_path_for()","after_sign_in_path_for()","after_update_path_for()","after_update_path_for()","all_event_names()","app_sanitize()","attachments()","attending()","attends_stmm_params()","attends_stmm_validation_params()","attributes_attributes_no_coexisting()","attributes_should_be_before_description()","attributes_should_be_before_returns()","awaiting_admin?()","awaiting_admin?()","awaiting_admin_events()","awaiting_candidate?()","awaiting_candidate?()","awaiting_candidate_events()","baptism()","baptismal_certificate()","baptismal_external_verification()","baptized_at_stmm_show_no()","baptized_at_stmm_show_yes()","basic_permitted_params()","basic_permitted_params()","basic_permitted_params()","basic_permitted_params()","basic_permitted_params()","basic_permitted_params()","basic_validatiion_params()","basic_validation_params()","basic_validation_params()","basic_validation_params()","bcc_email()","before?()","body()","body()","build_associations()","build_associations()","build_associations()","build_resource()","cand_account_confirmation()","candidate_event_id()","candidate_event_state()","candidate_event_to_path()","candidate_events_columns()","candidate_events_sorted()","candidate_from_token()","candidate_note()","candidate_note_update()","candidate_params()","candidate_params()","candidate_permitted_params()","candidate_sheet()","candidate_sheet()","candidate_sheet_update()","candidate_sheet_verify()","candidate_sheet_verify_update()","candidates_columns()","candidates_info()","cc_email()","cc_email_2()","certificate_file_params()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change_completed_date()","change_due_date()","check_events()","check_events()","check_workbook()","checkbox_checked()","checkbox_name()","checkbox_value()","chosen_baptized_at_stmm?()","chosen_first_comm_at_stmm?()","christian_ministry()","christian_ministry()","christian_ministry_update()","christian_ministry_verify()","christian_ministry_verify_update()","clean_associations()","clean_dir()","code()","coming_due?()","coming_due?()","coming_due_events()","common_columns()","common_event()","common_event_columns()","common_image()","common_non_event_columns()","completed()","completed?()","completed?()","completed_awaiting_events()","completed_date()","completed_events()","conf_event_id()","configure_permitted_parameters()","configure_permitted_parameters()","confirm_account()","confirmation_events_columns()","confirmation_events_sorted()","confirmation_instructions()","confirmation_instructions()","confirmation_name()","confirmation_name()","confirmation_name_external_verification()","confirmation_path()","confirmed?()","contact_information()","content_type()","convert_email()","convert_emails()","convert_if_not_production()","covenant_agreement()","create()","create()","create()","create()","create_admin()","create_candidate()","create_candidate()","create_candidate()","create_candidate_event()","create_candidate_events()","create_candidate_local()","create_candidate_old()","create_mail()","create_personalization()","create_scanned_image()","create_xlsx()","define_grid_page()","delete_dir()","description_begins_with_empty_comment()","description_does_not_end_with_empty_comment()","description_missing_with_parameters()","description_missing_with_parameters_and_returns()","description_missing_with_parameters_and_returns2()","destroy()","destroy()","devise_mapping()","devise_mapping()","devise_mapping()","devise_mapping()","devise_mapping()","devise_mapping()","do_document()","document_name()","document_name()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","download_document()","due_date()","edit()","edit()","edit()","edit_multiple_confirmation_events()","email()","email()","email=()","email=()","email_changed?()","email_changed?()","email_error_message()","email_error_message()","email_error_message()","email_required?()","email_required?()","emails()","empty_comm?()","end_comment()","ends_with_empty_comment?()","event()","event()","event()","event()","event_class()","event_columns()","event_name()","event_name()","event_name()","event_name()","event_name()","event_name()","event_name_to_path()","event_name_to_path_verify()","event_values()","event_with_picture()","event_with_picture_image()","event_with_picture_setup()","event_with_picture_update()","event_with_picture_verify()","event_with_picture_verify_update()","events()","events_external_verification()","expand_text()","expand_text_ci()","expand_text_rp()","expanded_text()","expect_account_confirmed()","expect_adhoc_mailing_html()","expect_admin()","expect_baptismal_certificate_form()","expect_basic_admin_info()","expect_basic_candidate_info()","expect_cand_account_confirmation()","expect_candidate()","expect_candidate_event()","expect_candidate_note_form()","expect_candidate_sheet_form()","expect_candidates()","expect_candidates_empty()","expect_christian_ministry_form()","expect_closing()","expect_column_sorting()","expect_common()","expect_confirmation_event()","expect_confirmation_events()","expect_confirmation_events_empty()","expect_create_candidate()","expect_db()","expect_download_button()","expect_edit_and_new_view()","expect_event()","expect_event_association()","expect_event_association_local()","expect_external_verification()","expect_field()","expect_form()","expect_heading()","expect_heading()","expect_image_upload()","expect_image_values()","expect_import_with_events()","expect_initial_conf_events()","expect_keys()","expect_links_in_order()","expect_mail_attadchment_upload()","expect_mailer_text()","expect_mass_edit_candidates_event()","expect_mass_mailing_html()","expect_message()","expect_messages()","expect_monthly_mass_mailing_form()","expect_no_orphaned_associations()","expect_offenses()","expect_ophans()","expect_password_changed()","expect_pick_confirmation_name_form()","expect_remove_button()","expect_retreat_verification_form()","expect_select_checkbox()","expect_send_data()","expect_show_visitor()","expect_signed_agreement_form()","expect_sorting_candidate_list()","expect_sponsor_covenant_form()","expect_table()","expect_table_rows()","expect_view()","expected_orphans()","expected_value_function()","export_to_excel()","export_to_excel_no_pictures()","export_to_excel_no_pictures()","export_to_excel_no_pictures_message()","export_to_excel_pictures_message()","external_verification()","fill_in_cand()","fill_in_form()","find_cell_offset()","find_first_by_auth_conditions()","first_comm_at_stmm_show_no()","first_comm_at_stmm_show_yes()","first_comm_show()","first_comment?()","first_comment_equal?()","first_empty_comment?()","first_name()","first_param_and_arg_name()","foo_bar()","generate_seed()","get_candidate_event()","get_column_value()","get_event_association()","grade()","grid_address()","grid_label()","grid_label_value()","grid_label_value2()","grid_value()","handle_error()","headers_for()","i18n_label()","id()","ids()","illegal_parameters_syntax()","illegal_returns_syntax()","illegal_sub_attributes()","illegal_sub_format_returns()","illegal_unused_argument()","image_column_value()","image_columns()","image_filename_import()","image_filepath_export()","img_src_selector()","import_candidates()","index()","index()","index()","index()","info_show()","inialize()","keep_bc_errors()","last_name()","late?()","late?()","late_events()","legal_attributes()","legal_description_with_parameters_and_returns()","legal_description_with_returns()","legal_descriptions()","legal_emails()","legal_multiple_returns_syntax()","legal_no_args()","legal_parameters_syntax()","legal_returns_syntax()","legal_sub_attributes()","legal_sub_parameters()","legal_sub_values()","load_initial_file()","login_admin()","login_candidate()","make_valid_bc()","make_valid_rv()","make_valid_sc()","make_valid_sc_eligibility()","mark_completed()","mass_edit_candidates_event()","mass_edit_candidates_event_update()","mass_edit_candidates_update()","missing?()","missing_blank_comment_attributes_first()","missing_blank_comment_attributes_last()","missing_blank_comment_parameters_no_parameters()","missing_blank_comment_returns_no_parameters()","missing_body_parameters()","missing_description_with_returns()","missing_descriptions()","missing_first_blank_comment_parameters()","missing_first_blank_comment_returns()","monthly_mass_mailing()","monthly_mass_mailing()","monthly_mass_mailing_test()","monthly_mass_mailing_update()","monthly_reminder()","monthly_reminder_test()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_body()","new_closing_input()","new_completed_awaiting_input()","new_completed_input()","new_from_input()","new_pre_coming_due_input()","new_pre_late_input()","new_salutation_input()","new_subject()","no_args()","no_args_with_returns()","no_attributes_body()","no_comment()","not_attends_stmm_params()","offenses()","on_def()","orphaned_addresses()","orphaned_baptismal_certificates()","orphaned_candidate_sheets()","orphaned_christian_ministry()","orphaned_ids()","orphaned_pick_name()","orphaned_retreat_verification()","orphaned_scanned_image()","orphaned_sponsor_covenant()","orphaned_table_rows()","orphaned_to_do()","page_header()","param_and_arg_name()","param_and_arg_name_good()","param_and_arg_name_order()","params_greater_than_args()","params_greater_than_args_name_mismatch()","params_less_than_args()","params_less_than_args_2()","parm_names()","password_changed()","password_changed?()","password_reset_message()","paul_kristoff()","perform()","perform()","perform()","perform()","permitted_params()","permitted_params()","permitted_params()","permitted_params()","permitted_params()","permitted_params()","permitted_params()","permitted_params()","permitted_params()","permitted_params()","persisted?()","pick_confirmation_name()","pick_confirmation_name_file_params()","pick_confirmation_name_update()","pick_confirmation_name_verify()","pick_confirmation_name_verify_update()","pluck_cand_events()","pluck_candidates()","post_email()","post_email()","process_events()","range_body()","readonly?()","redirect_back_mail()","remove_all_confirmation_events()","remove_orphaned_table_rows()","render_setup()","reset_database()","reset_database()","reset_password()","reset_password_by_token()","resource()","resource()","resource()","resource()","resource_class()","resource_name()","resource_name()","resource_name()","resource_name()","respond_with()","retreat()","retreat_external_verification()","retreat_verification()","returns?()","revert_confirmation_event()","route()","save()","second_param_and_arg_name()","section_class()","section_id()","send_email()","send_email_admin()","send_on_create_confirmation_instructions()","send_reset_password_instructions()","set_confirmation_events()","setup_adhoc_render()","setup_adhoc_render_default()","setup_candidate()","setup_message_info()","setup_monthly_mailing_render()","setup_monthly_mailing_render_default()","setup_unknown_missing_events()","show()","show()","show()","show()","show_visitor()","sign_agreement()","sign_agreement_update()","sign_agreement_verify()","sign_agreement_verify_update()","sign_up()","sign_up_admin_with()","sign_up_candidate_with()","signin_admin()","signin_candidate()","sort_column()","sort_direction()","sortable()","sponsor()","sponsor_covenant()","sponsor_eligibility_file_params()","sponsor_external_verification()","start_comment()","start_new_year()","start_new_year()","started?()","started?()","starts_with_empty_comment?()","status()","status()","status()","status_code()","sub_validate()","subject_for()","text()","text_area_name()","title_page()","to_email()","to_hash()","to_s()","to_xlsx()","transient_columns()","unused_argument()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","update()","update()","update_baptismal_certificate()","update_christian_ministry()","update_event()","update_multiple_confirmation_events()","update_pick_confirmation_name()","update_resource()","update_sponsor_covenant()","update_visitor()","upload_sponsor_eligibility_image()","valid_parameters_bc()","valid_parameters_rv()","valid_parameters_sc()","valid_parameters_sc_eligibility()","validate()","validate_creation_complete()","validate_creation_complete()","validate_creation_complete()","validate_either()","validate_email()","validate_emails()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_event_complete()","validate_other_info()","verifiable_info()","verifiable_info()","verifiable_info()","verifiable_info()","verifiable_info()","verifiable_info()","verifiable_info()","verifiable_info()","verified()","vicki_kristoff()","will_save_change_to_email?()","xlsx_columns()","xlsx_conf_event_columns()","gemfile","gemfile.lock","procfile","readme","readme","rakefile","app.json","application.js","candidate_imports_controller.coffee","registrations.coffee","tablesorter.js.coffee","toggle.js","1st_load_framework.css.scss","application.css.scss","candidate_imports_controller.scss","registrations.scss","simple-sidebar.css","config.ru","404.html","422.html","500.html","favicon.ico","humans","robots","temp","tinymce.min.js"],"longSearchIndex":["addattendretreat","addcandidatecolumns","addcandidateinformationsheet","addcandidatenotetocandidates","addchristianministryevent","addcolumnfirstcommatstmm","addconfirmabletodevise","addconfirmationname","addconfirmationnametocandidate","addcovenantagreement","addfilecolumnstosponsorcovenants","addinstructionstoconfirmationevent","addmiddlenametocandidatesheet","addnametoadmins","addnametousers","addparentinformationmeeting","addpickconfirmationnameevent","addsignedagreementtocandidate","addsponsorcandidateconfirmationevent","addsponsorcovenant","address","admin","adminscontroller","appfactory","applicationcontroller","applicationhelper","applicationrecord","attributescontroller","baptismalcertificate","candidate","candidateevent","candidateimport","candidateimportscontroller","candidateimportshelper","candidatepdfdocument","candidatesheet","candidatescontroller","candidatesmailer","candidatesmailertext","changedefaultvalueofbaptizedatstmm","changedefaultvaluetoaddresscity","changeeventnamesponsorcovenant","changeretreatfilecontentinretreatverification","christianministry","commoncandidatescontroller","confirmation","confirmation::application","confirmationevent","controllermacros","createaddresses","createbaptismalcertificates","createcandidateevents","createcandidatesheets","createconfirmationeventcandidateevents","createconfirmationevents","createretreatverifications","createscannedimages","createvisitors","customdevisemailer","descriptionscontroller","dev","dev::candaccountconfirmationscontroller","dev::candidatescontroller","dev::passwordscontroller","dev::registrationscontroller","devisecreateadmins","devisecreateusers","devisehelpers","devisehelpersadmin","devisehelpersnew","devisepermittedparameters","deviserails5helpers","deviserails5helpers::capybara","deviserails5helpers::capybara::node","deviserails5helpers::capybara::node::simple","dummygoodresponse","emailstuff","event","event::document","event::other","event::route","eventcompletevalidator","exportexcelcandjob","exportexceljob","exportexceljobspec","exportlistscontroller","features","features::sessionhelpers","filehelper","initializechsduedate","initializechsduedatesave","mailpart","methoddocrange","migrateandremoveoldimages","noargscontroller","nocommentcontroller","object","offlineresponse","parameterscontroller","paramsgreaterthanargscontroller","paramslessthanargscontroller","parmnamedoesnotmatchargumentnamecontroller","pickconfirmationname","pluckcan","registrationscontroller","registrationshelper","removechristianministryfilenamefromchristianministries","removeconfirmationfromcandidates","removepickconfirmationnamefilenamefrompickconfirmationnames","removesponsoragreementfromcandidates","renameadminconfirmedtoverified","renamecandiatescolumncandiateid","renameduedatetothewayduedate","renamefilloutcandidateinformationsheet","renamepickconfirmationname","renamesignagreement","renameuploadbaptismalcertificate","renameusertocandidate","retreatverification","returnscontroller","rubocop","rubocop::cop","rubocop::cop::style","rubocop::cop::style::publicmethoddocumentation","rubocop::cop::team","scannedimage","sendemailjob","sendgridmail","sendgridmailspec","sendresetemailjob","sidebar","sortingcandlisthelpers","sponsorcovenant","todo","viewshelpers","visitor","visitorscontroller","visitorscontroller#about()","visitorscontroller#about_app()","candidate#account_confirmed?()","pluckcan#account_name()","applicationhelper#active_tab_class()","object#add_baptismal_certificate_image()","candidate#add_candidate_event()","appfactory::add_candidate_events()","appfactory::add_confirmation_event()","appfactory::add_confirmation_event_due_date()","candidateimport#add_missing_events()","candidateimport#add_orphaned_table_rows()","object#add_retreat_verification_image()","object#add_sponsor_covenant_image()","object#add_sponsor_eligibility_image()","exportlistscontroller#add_wb()","candidatesmailer#adhoc()","sendgridmail#adhoc()","adminscontroller#adhoc_mailing()","adminscontroller#adhoc_mailing_update()","candidatesmailer#adhoc_test()","sendgridmail#adhoc_test()","candidatescontroller#admin?()","dev::candidatescontroller#admin?()","dev::candaccountconfirmationscontroller#after_confirmation_path_for()","applicationcontroller#after_sign_in_path_for()","dev::registrationscontroller#after_update_path_for()","registrationscontroller#after_update_path_for()","object#all_event_names()","applicationhelper#app_sanitize()","sendgridmailspec#attachments()","pluckcan#attending()","sponsorcovenant::attends_stmm_params()","sponsorcovenant::attends_stmm_validation_params()","attributescontroller#attributes_attributes_no_coexisting()","attributescontroller#attributes_should_be_before_description()","attributescontroller#attributes_should_be_before_returns()","candidateevent#awaiting_admin?()","candidateevent::awaiting_admin?()","candidate#awaiting_admin_events()","candidateevent::awaiting_candidate?()","candidateevent#awaiting_candidate?()","candidate#awaiting_candidate_events()","exportlistscontroller#baptism()","candidatepdfdocument#baptismal_certificate()","candidate::baptismal_external_verification()","baptismalcertificate#baptized_at_stmm_show_no()","baptismalcertificate#baptized_at_stmm_show_yes()","address::basic_permitted_params()","baptismalcertificate::basic_permitted_params()","candidatesheet::basic_permitted_params()","retreatverification::basic_permitted_params()","sponsorcovenant::basic_permitted_params()","visitor::basic_permitted_params()","address::basic_validatiion_params()","baptismalcertificate::basic_validation_params()","candidatesheet::basic_validation_params()","retreatverification::basic_validation_params()","candidate#bcc_email()","methoddocrange#before?()","dummygoodresponse#body()","offlineresponse#body()","baptismalcertificate#build_associations()","candidate#build_associations()","candidatesheet#build_associations()","dev::registrationscontroller#build_resource()","visitorscontroller#cand_account_confirmation()","pluckcan#candidate_event_id()","exportlistscontroller::candidate_event_state()","applicationhelper#candidate_event_to_path()","sortingcandlisthelpers#candidate_events_columns()","candidate#candidate_events_sorted()","dev::passwordscontroller#candidate_from_token()","candidatescontroller#candidate_note()","candidatescontroller#candidate_note_update()","applicationcontroller#candidate_params()","candidate::candidate_params()","applicationcontroller#candidate_permitted_params()","candidatepdfdocument#candidate_sheet()","commoncandidatescontroller#candidate_sheet()","commoncandidatescontroller#candidate_sheet_update()","candidatescontroller#candidate_sheet_verify()","candidatescontroller#candidate_sheet_verify_update()","sortingcandlisthelpers#candidates_columns()","applicationcontroller#candidates_info()","candidatesheet#cc_email()","candidatesheet#cc_email_2()","applicationcontroller#certificate_file_params()","addcandidatecolumns#change()","addcandidatenotetocandidates#change()","addconfirmationnametocandidate#change()","addfilecolumnstosponsorcovenants#change()","addinstructionstoconfirmationevent#change()","addmiddlenametocandidatesheet#change()","addnametoadmins#change()","addnametousers#change()","addsignedagreementtocandidate#change()","changedefaultvaluetoaddresscity#change()","changeretreatfilecontentinretreatverification#change()","createaddresses#change()","createbaptismalcertificates#change()","createcandidateevents#change()","createcandidatesheets#change()","createconfirmationeventcandidateevents#change()","createconfirmationevents#change()","createretreatverifications#change()","createscannedimages#change()","devisecreateadmins#change()","devisecreateusers#change()","initializechsduedate#change()","initializechsduedatesave#change()","migrateandremoveoldimages#change()","removechristianministryfilenamefromchristianministries#change()","removepickconfirmationnamefilenamefrompickconfirmationnames#change()","removesponsoragreementfromcandidates#change()","renameadminconfirmedtoverified#change()","renamecandiatescolumncandiateid#change()","renameduedatetothewayduedate#change()","renameuploadbaptismalcertificate#change()","renameusertocandidate#change()","object#change_completed_date()","object#change_due_date()","candidateimport#check_events()","candidateimportscontroller#check_events()","object#check_workbook()","mailpart#checkbox_checked()","mailpart#checkbox_name()","mailpart#checkbox_value()","baptismalcertificate#chosen_baptized_at_stmm?()","baptismalcertificate#chosen_first_comm_at_stmm?()","candidatepdfdocument#christian_ministry()","commoncandidatescontroller#christian_ministry()","commoncandidatescontroller#christian_ministry_update()","candidatescontroller#christian_ministry_verify()","candidatescontroller#christian_ministry_verify_update()","candidateimport#clean_associations()","object#clean_dir()","offlineresponse#code()","candidateevent::coming_due?()","candidateevent#coming_due?()","candidate#coming_due_events()","sortingcandlisthelpers#common_columns()","candidatepdfdocument#common_event()","sortingcandlisthelpers#common_event_columns()","candidatepdfdocument#common_image()","sortingcandlisthelpers#common_non_event_columns()","candidate#completed()","candidateevent::completed?()","candidateevent#completed?()","candidatesmailertext#completed_awaiting_events()","pluckcan#completed_date()","candidatesmailertext#completed_events()","pluckcan#conf_event_id()","applicationcontroller#configure_permitted_parameters()","devisepermittedparameters#configure_permitted_parameters()","candidate#confirm_account()","sortingcandlisthelpers#confirmation_events_columns()","exportexcelcandjob#confirmation_events_sorted()","candidate#confirmation_instructions()","sendgridmail#confirmation_instructions()","candidatepdfdocument#confirmation_name()","exportlistscontroller#confirmation_name()","candidate::confirmation_name_external_verification()","devisehelpers#confirmation_path()","pluckcan#confirmed?()","visitorscontroller#contact_information()","exportexcelcandjob#content_type()","sendgridmail#convert_email()","sendgridmail#convert_emails()","sendgridmail#convert_if_not_production()","candidatepdfdocument#covenant_agreement()","appfactory::create()","dev::candaccountconfirmationscontroller#create()","dev::registrationscontroller#create()","registrationscontroller#create()","appfactory::create_admin()","appfactory::create_candidate()","object#create_candidate()","viewshelpers#create_candidate()","object#create_candidate_event()","object#create_candidate_events()","object#create_candidate_local()","object#create_candidate_old()","sendgridmail#create_mail()","sendgridmail#create_personalization()","object#create_scanned_image()","exportlistscontroller#create_xlsx()","candidatepdfdocument#define_grid_page()","filehelper#delete_dir()","descriptionscontroller#description_begins_with_empty_comment()","descriptionscontroller#description_does_not_end_with_empty_comment()","descriptionscontroller#description_missing_with_parameters()","descriptionscontroller#description_missing_with_parameters_and_returns()","descriptionscontroller#description_missing_with_parameters_and_returns2()","dev::registrationscontroller#destroy()","registrationscontroller#destroy()","candidatescontroller#devise_mapping()","dev::registrationscontroller#devise_mapping()","devisehelpers#devise_mapping()","devisehelpersadmin#devise_mapping()","devisehelpersnew#devise_mapping()","registrationscontroller#devise_mapping()","candidatepdfdocument#do_document()","candidatepdfdocument#document_name()","candidatepdfdocument::document_name()","addattendretreat#down()","addcandidateinformationsheet#down()","addchristianministryevent#down()","addcolumnfirstcommatstmm#down()","addconfirmabletodevise#down()","addconfirmationname#down()","addcovenantagreement#down()","addparentinformationmeeting#down()","addpickconfirmationnameevent#down()","addsponsorcandidateconfirmationevent#down()","addsponsorcovenant#down()","baptismalcertificate#down()","changedefaultvalueofbaptizedatstmm#down()","changeeventnamesponsorcovenant::down()","createvisitors::down()","removeconfirmationfromcandidates#down()","renamefilloutcandidateinformationsheet#down()","renamepickconfirmationname#down()","renamesignagreement#down()","renameuploadbaptismalcertificate#down()","commoncandidatescontroller#download_document()","candidateevent#due_date()","candidatescontroller#edit()","dev::candidatescontroller#edit()","dev::passwordscontroller#edit()","adminscontroller#edit_multiple_confirmation_events()","candidate#email()","candidatesheet#email()","candidate#email=()","candidatesheet#email=()","candidate#email_changed?()","candidatesheet#email_changed?()","exportexceljob#email_error_message()","exportexceljobspec#email_error_message()","sendgridmail#email_error_message()","candidate#email_required?()","candidatesheet#email_required?()","candidate#emails()","methoddocrange#empty_comm?()","methoddocrange#end_comment()","methoddocrange#ends_with_empty_comment?()","candidatescontroller#event()","dev::candidatescontroller#event()","dev::registrationscontroller#event()","registrationscontroller#event()","applicationcontroller#event_class()","exportlistscontroller::event_columns()","baptismalcertificate::event_name()","candidatesheet::event_name()","christianministry::event_name()","pickconfirmationname::event_name()","retreatverification::event_name()","sponsorcovenant::event_name()","sortingcandlisthelpers#event_name_to_path()","sortingcandlisthelpers#event_name_to_path_verify()","exportlistscontroller::event_values()","commoncandidatescontroller#event_with_picture()","commoncandidatescontroller#event_with_picture_image()","object#event_with_picture_setup()","commoncandidatescontroller#event_with_picture_update()","commoncandidatescontroller#event_with_picture_verify()","commoncandidatescontroller#event_with_picture_verify_update()","exportlistscontroller#events()","candidate::events_external_verification()","sendgridmail#expand_text()","sendgridmail#expand_text_ci()","sendgridmail#expand_text_rp()","sendgridmailspec#expanded_text()","viewshelpers#expect_account_confirmed()","object#expect_adhoc_mailing_html()","object#expect_admin()","object#expect_baptismal_certificate_form()","object#expect_basic_admin_info()","object#expect_basic_candidate_info()","object#expect_cand_account_confirmation()","object#expect_candidate()","object#expect_candidate_event()","object#expect_candidate_note_form()","object#expect_candidate_sheet_form()","object#expect_candidates()","object#expect_candidates_empty()","sortingcandlisthelpers#expect_christian_ministry_form()","object#expect_closing()","object#expect_column_sorting()","object#expect_common()","object#expect_confirmation_event()","object#expect_confirmation_events()","object#expect_confirmation_events_empty()","viewshelpers#expect_create_candidate()","viewshelpers#expect_db()","object#expect_download_button()","viewshelpers#expect_edit_and_new_view()","sortingcandlisthelpers#expect_event()","object#expect_event_association()","object#expect_event_association_local()","object#expect_external_verification()","object#expect_field()","object#expect_form()","object#expect_heading()","sortingcandlisthelpers#expect_heading()","object#expect_image_upload()","object#expect_image_values()","object#expect_import_with_events()","object#expect_initial_conf_events()","object#expect_keys()","object#expect_links_in_order()","object#expect_mail_attadchment_upload()","object#expect_mailer_text()","sortingcandlisthelpers#expect_mass_edit_candidates_event()","viewshelpers#expect_mass_mailing_html()","object#expect_message()","object#expect_messages()","object#expect_monthly_mass_mailing_form()","object#expect_no_orphaned_associations()","object#expect_offenses()","object#expect_ophans()","viewshelpers#expect_password_changed()","sortingcandlisthelpers#expect_pick_confirmation_name_form()","object#expect_remove_button()","object#expect_retreat_verification_form()","sortingcandlisthelpers#expect_select_checkbox()","object#expect_send_data()","object#expect_show_visitor()","object#expect_signed_agreement_form()","sortingcandlisthelpers#expect_sorting_candidate_list()","object#expect_sponsor_covenant_form()","object#expect_table()","object#expect_table_rows()","object#expect_view()","object#expected_orphans()","object#expected_value_function()","candidateimportscontroller#export_to_excel()","exportexceljob#export_to_excel_no_pictures()","exportexceljobspec#export_to_excel_no_pictures()","sendgridmail#export_to_excel_no_pictures_message()","sendgridmail#export_to_excel_pictures_message()","candidate::external_verification()","object#fill_in_cand()","object#fill_in_form()","object#find_cell_offset()","candidate::find_first_by_auth_conditions()","baptismalcertificate#first_comm_at_stmm_show_no()","baptismalcertificate#first_comm_at_stmm_show_yes()","baptismalcertificate#first_comm_show()","methoddocrange#first_comment?()","methoddocrange#first_comment_equal?()","methoddocrange#first_empty_comment?()","pluckcan#first_name()","parmnamedoesnotmatchargumentnamecontroller#first_param_and_arg_name()","object#foo_bar()","appfactory::generate_seed()","candidate#get_candidate_event()","exportexcelcandjob#get_column_value()","candidate#get_event_association()","pluckcan#grade()","candidatepdfdocument#grid_address()","candidatepdfdocument#grid_label()","candidatepdfdocument#grid_label_value()","candidatepdfdocument#grid_label_value2()","candidatepdfdocument#grid_value()","rubocop::cop::team#handle_error()","customdevisemailer#headers_for()","mailpart#i18n_label()","pluckcan#id()","candidateimport#ids()","parameterscontroller#illegal_parameters_syntax()","returnscontroller#illegal_returns_syntax()","attributescontroller#illegal_sub_attributes()","returnscontroller#illegal_sub_format_returns()","parmnamedoesnotmatchargumentnamecontroller#illegal_unused_argument()","object#image_column_value()","candidateimport::image_columns()","candidateimport::image_filename_import()","candidateimport::image_filepath_export()","object#img_src_selector()","candidateimportscontroller#import_candidates()","adminscontroller#index()","candidatescontroller#index()","dev::candidatescontroller#index()","visitorscontroller#index()","baptismalcertificate#info_show()","exportexceljobspec#inialize()","candidate#keep_bc_errors()","pluckcan#last_name()","candidateevent#late?()","candidateevent::late?()","candidate#late_events()","attributescontroller#legal_attributes()","descriptionscontroller#legal_description_with_parameters_and_returns()","descriptionscontroller#legal_description_with_returns()","descriptionscontroller#legal_descriptions()","sendgridmail#legal_emails()","returnscontroller#legal_multiple_returns_syntax()","descriptionscontroller#legal_no_args()","parameterscontroller#legal_parameters_syntax()","returnscontroller#legal_returns_syntax()","attributescontroller#legal_sub_attributes()","parameterscontroller#legal_sub_parameters()","returnscontroller#legal_sub_values()","candidateimport#load_initial_file()","controllermacros#login_admin()","controllermacros#login_candidate()","object#make_valid_bc()","object#make_valid_rv()","object#make_valid_sc()","object#make_valid_sc_eligibility()","candidateevent#mark_completed()","adminscontroller#mass_edit_candidates_event()","adminscontroller#mass_edit_candidates_event_update()","adminscontroller#mass_edit_candidates_update()","methoddocrange#missing?()","attributescontroller#missing_blank_comment_attributes_first()","attributescontroller#missing_blank_comment_attributes_last()","parameterscontroller#missing_blank_comment_parameters_no_parameters()","returnscontroller#missing_blank_comment_returns_no_parameters()","parameterscontroller#missing_body_parameters()","descriptionscontroller#missing_description_with_returns()","descriptionscontroller#missing_descriptions()","parameterscontroller#missing_first_blank_comment_parameters()","returnscontroller#missing_first_blank_comment_returns()","adminscontroller#monthly_mass_mailing()","sendgridmail#monthly_mass_mailing()","sendgridmail#monthly_mass_mailing_test()","adminscontroller#monthly_mass_mailing_update()","candidatesmailer#monthly_reminder()","candidatesmailer#monthly_reminder_test()","candidateimport::new()","candidateimportscontroller#new()","candidatepdfdocument::new()","candidatescontroller#new()","candidatesmailertext::new()","dev::registrationscontroller#new()","dummygoodresponse::new()","eventcompletevalidator::new()","exportexcelcandjob::new()","mailpart::new()","methoddocrange::new()","offlineresponse::new()","pluckcan::new()","registrationscontroller#new()","sendgridmail::new()","sendgridmailspec::new()","mailpart::new_body()","mailpart::new_closing_input()","mailpart::new_completed_awaiting_input()","mailpart::new_completed_input()","mailpart::new_from_input()","mailpart::new_pre_coming_due_input()","mailpart::new_pre_late_input()","mailpart::new_salutation_input()","mailpart::new_subject()","noargscontroller#no_args()","noargscontroller#no_args_with_returns()","attributescontroller#no_attributes_body()","nocommentcontroller#no_comment()","sponsorcovenant::not_attends_stmm_params()","object#offenses()","rubocop::cop::style::publicmethoddocumentation#on_def()","candidateimport#orphaned_addresses()","candidateimport#orphaned_baptismal_certificates()","candidateimport#orphaned_candidate_sheets()","candidateimport#orphaned_christian_ministry()","candidateimport#orphaned_ids()","candidateimport#orphaned_pick_name()","candidateimport#orphaned_retreat_verification()","candidateimport#orphaned_scanned_image()","candidateimport#orphaned_sponsor_covenant()","candidateimportscontroller#orphaned_table_rows()","candidateimport#orphaned_to_do()","candidatepdfdocument#page_header()","parmnamedoesnotmatchargumentnamecontroller#param_and_arg_name()","parmnamedoesnotmatchargumentnamecontroller#param_and_arg_name_good()","parmnamedoesnotmatchargumentnamecontroller#param_and_arg_name_order()","paramsgreaterthanargscontroller#params_greater_than_args()","paramsgreaterthanargscontroller#params_greater_than_args_name_mismatch()","paramslessthanargscontroller#params_less_than_args()","paramslessthanargscontroller#params_less_than_args_2()","methoddocrange#parm_names()","pluckcan#password_changed()","candidate#password_changed?()","candidate#password_reset_message()","object#paul_kristoff()","exportexcelcandjob#perform()","exportexceljob#perform()","sendemailjob#perform()","sendresetemailjob#perform()","baptismalcertificate::permitted_params()","candidate::permitted_params()","candidateevent::permitted_params()","candidatesheet::permitted_params()","christianministry::permitted_params()","confirmationevent::permitted_params()","pickconfirmationname::permitted_params()","retreatverification::permitted_params()","scannedimage::permitted_params()","sponsorcovenant::permitted_params()","candidateimport#persisted?()","commoncandidatescontroller#pick_confirmation_name()","applicationcontroller#pick_confirmation_name_file_params()","commoncandidatescontroller#pick_confirmation_name_update()","candidatescontroller#pick_confirmation_name_verify()","candidatescontroller#pick_confirmation_name_verify_update()","pluckcan::pluck_cand_events()","pluckcan::pluck_candidates()","sendgridmail#post_email()","sendgridmailspec#post_email()","candidatepdfdocument#process_events()","methoddocrange#range_body()","deviserails5helpers::capybara::node::simple#readonly?()","adminscontroller#redirect_back_mail()","candidateimport#remove_all_confirmation_events()","candidateimport#remove_orphaned_table_rows()","object#render_setup()","candidateimport#reset_database()","candidateimportscontroller#reset_database()","sendgridmail#reset_password()","candidate::reset_password_by_token()","devisehelpers#resource()","devisehelpersadmin#resource()","devisehelpersnew#resource()","visitorscontroller#resource()","candidatescontroller#resource_class()","candidatescontroller#resource_name()","devisehelpers#resource_name()","devisehelpersadmin#resource_name()","devisehelpersnew#resource_name()","dev::passwordscontroller#respond_with()","exportlistscontroller#retreat()","candidate::retreat_external_verification()","candidatepdfdocument#retreat_verification()","methoddocrange#returns?()","appfactory::revert_confirmation_event()","candidateevent#route()","object#save()","parmnamedoesnotmatchargumentnamecontroller#second_param_and_arg_name()","mailpart#section_class()","mailpart#section_id()","sendgridmail#send_email()","sendgridmail#send_email_admin()","candidate#send_on_create_confirmation_instructions()","candidate#send_reset_password_instructions()","adminscontroller#set_confirmation_events()","adminscontroller#setup_adhoc_render()","adminscontroller#setup_adhoc_render_default()","object#setup_candidate()","candidatesmailer#setup_message_info()","adminscontroller#setup_monthly_mailing_render()","adminscontroller#setup_monthly_mailing_render_default()","viewshelpers#setup_unknown_missing_events()","adminscontroller#show()","candidatescontroller#show()","dev::candaccountconfirmationscontroller#show()","dev::candidatescontroller#show()","adminscontroller#show_visitor()","commoncandidatescontroller#sign_agreement()","commoncandidatescontroller#sign_agreement_update()","commoncandidatescontroller#sign_agreement_verify()","commoncandidatescontroller#sign_agreement_verify_update()","registrationscontroller#sign_up()","features::sessionhelpers#sign_up_admin_with()","features::sessionhelpers#sign_up_candidate_with()","features::sessionhelpers#signin_admin()","features::sessionhelpers#signin_candidate()","applicationhelper#sort_column()","applicationhelper#sort_direction()","applicationhelper#sortable()","exportlistscontroller#sponsor()","candidatepdfdocument#sponsor_covenant()","applicationcontroller#sponsor_eligibility_file_params()","candidate::sponsor_external_verification()","methoddocrange#start_comment()","candidateimport#start_new_year()","candidateimportscontroller#start_new_year()","candidateevent::started?()","candidateevent#started?()","methoddocrange#starts_with_empty_comment?()","candidateevent::status()","candidateevent#status()","pluckcan#status()","dummygoodresponse#status_code()","eventcompletevalidator#sub_validate()","customdevisemailer#subject_for()","sendgridmail#text()","mailpart#text_area_name()","candidatepdfdocument#title_page()","candidatesheet#to_email()","offlineresponse#to_hash()","methoddocrange#to_s()","candidateimport#to_xlsx()","candidateimport::transient_columns()","parmnamedoesnotmatchargumentnamecontroller#unused_argument()","addattendretreat#up()","addcandidateinformationsheet#up()","addchristianministryevent#up()","addcolumnfirstcommatstmm#up()","addconfirmabletodevise#up()","addconfirmationname#up()","addcovenantagreement#up()","addparentinformationmeeting#up()","addpickconfirmationnameevent#up()","addsponsorcandidateconfirmationevent#up()","addsponsorcovenant#up()","baptismalcertificate#up()","changedefaultvalueofbaptizedatstmm#up()","changeeventnamesponsorcovenant::up()","createvisitors::up()","removeconfirmationfromcandidates#up()","renamefilloutcandidateinformationsheet#up()","renamepickconfirmationname#up()","renamesignagreement#up()","renameuploadbaptismalcertificate#up()","candidatescontroller#update()","dev::passwordscontroller#update()","object#update_baptismal_certificate()","object#update_christian_ministry()","object#update_event()","adminscontroller#update_multiple_confirmation_events()","object#update_pick_confirmation_name()","registrationscontroller#update_resource()","object#update_sponsor_covenant()","adminscontroller#update_visitor()","commoncandidatescontroller#upload_sponsor_eligibility_image()","object#valid_parameters_bc()","object#valid_parameters_rv()","object#valid_parameters_sc()","object#valid_parameters_sc_eligibility()","eventcompletevalidator#validate()","candidate#validate_creation_complete()","candidatesheet#validate_creation_complete()","candidatesheet::validate_creation_complete()","eventcompletevalidator#validate_either()","candidatesheet#validate_email()","candidatesheet#validate_emails()","address#validate_event_complete()","baptismalcertificate#validate_event_complete()","baptismalcertificate::validate_event_complete()","candidate#validate_event_complete()","candidatesheet::validate_event_complete()","candidatesheet#validate_event_complete()","christianministry::validate_event_complete()","christianministry#validate_event_complete()","pickconfirmationname#validate_event_complete()","pickconfirmationname::validate_event_complete()","retreatverification::validate_event_complete()","retreatverification#validate_event_complete()","sponsorcovenant::validate_event_complete()","sponsorcovenant#validate_event_complete()","baptismalcertificate#validate_other_info()","baptismalcertificate#verifiable_info()","candidate#verifiable_info()","candidateevent#verifiable_info()","candidatesheet#verifiable_info()","christianministry#verifiable_info()","pickconfirmationname#verifiable_info()","retreatverification#verifiable_info()","sponsorcovenant#verifiable_info()","pluckcan#verified()","object#vicki_kristoff()","candidate#will_save_change_to_email?()","candidateimport#xlsx_columns()","candidateimport#xlsx_conf_event_columns()","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["AddAttendRetreat","","AddAttendRetreat.html","",""],["AddCandidateColumns","","AddCandidateColumns.html","",""],["AddCandidateInformationSheet","","AddCandidateInformationSheet.html","",""],["AddCandidateNoteToCandidates","","AddCandidateNoteToCandidates.html","",""],["AddChristianMinistryEvent","","AddChristianMinistryEvent.html","",""],["AddColumnFirstCommAtStmm","","AddColumnFirstCommAtStmm.html","","<p>The candidate can now specify that they had First Communion at St MM, in\nwhich they don&#39;t have to …\n"],["AddConfirmableToDevise","","AddConfirmableToDevise.html","",""],["AddConfirmationName","","AddConfirmationName.html","",""],["AddConfirmationNameToCandidate","","AddConfirmationNameToCandidate.html","",""],["AddCovenantAgreement","","AddCovenantAgreement.html","",""],["AddFileColumnsToSponsorCovenants","","AddFileColumnsToSponsorCovenants.html","",""],["AddInstructionsToConfirmationEvent","","AddInstructionsToConfirmationEvent.html","",""],["AddMiddleNameToCandidateSheet","","AddMiddleNameToCandidateSheet.html","",""],["AddNameToAdmins","","AddNameToAdmins.html","",""],["AddNameToUsers","","AddNameToUsers.html","",""],["AddParentInformationMeeting","","AddParentInformationMeeting.html","",""],["AddPickConfirmationNameEvent","","AddPickConfirmationNameEvent.html","",""],["AddSignedAgreementToCandidate","","AddSignedAgreementToCandidate.html","",""],["AddSponsorCandidateConfirmationEvent","","AddSponsorCandidateConfirmationEvent.html","",""],["AddSponsorCovenant","","AddSponsorCovenant.html","",""],["Address","","Address.html","","<p>Active Record\n"],["Admin","","Admin.html","","<p>Admin for the candidates\n"],["AdminsController","","AdminsController.html","","<p>Handles Admin tasks\n"],["AppFactory","","AppFactory.html","","<p>AppFactory\n"],["ApplicationController","","ApplicationController.html","","<p>Handles Common Application tasks\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>Application Helper\n"],["ApplicationRecord","","ApplicationRecord.html","","<p>A place for common model info\n"],["AttributesController","","AttributesController.html","","<p>A fixture used by rubocop extensions to test uniformity of documentation\n"],["BaptismalCertificate","","BaptismalCertificate.html","","<p>Active Record\n"],["Candidate","","Candidate.html","","<p>Person being confirmed\n"],["CandidateEvent","","CandidateEvent.html","","<p>Candidate specific of a ConfirmationEvent\n"],["CandidateImport","","CandidateImport.html","","<p>A helper class used for importing and exporting the DB information.\n"],["CandidateImportsController","","CandidateImportsController.html","","<p>Handles CandidateImport tasks\n"],["CandidateImportsHelper","","CandidateImportsHelper.html","","<p>Candidate Imports Helper\n"],["CandidatePDFDocument","","CandidatePDFDocument.html","","<p>Generate PDF for candidate info\n<p>Parameters:\n<p><code>:candidate</code> Candidate\n"],["CandidateSheet","","CandidateSheet.html","","<p>Basic information about candidate.\n"],["CandidatesController","","CandidatesController.html","","<p>Handles Candidate tasks\n"],["CandidatesMailer","","CandidatesMailer.html","","<p>Used to send(expand) emails\n"],["CandidatesMailerText","","CandidatesMailerText.html","","<p>Used to hold information input from client\n"],["ChangeDefaultValueOfBaptizedAtStmm","","ChangeDefaultValueOfBaptizedAtStmm.html","",""],["ChangeDefaultValueToAddressCity","","ChangeDefaultValueToAddressCity.html","",""],["ChangeEventNameSponsorCovenant","","ChangeEventNameSponsorCovenant.html","",""],["ChangeRetreatFileContentInRetreatVerification","","ChangeRetreatFileContentInRetreatVerification.html","",""],["ChristianMinistry","","ChristianMinistry.html","","<p>Active Record\n"],["CommonCandidatesController","","CommonCandidatesController.html","","<p>Handles CommonCandidate tasks\n"],["Confirmation","","Confirmation.html","",""],["Confirmation::Application","","Confirmation/Application.html","",""],["ConfirmationEvent","","ConfirmationEvent.html","","<p>A common event that all candidates have to do in order to be confirmed.\n"],["ControllerMacros","","ControllerMacros.html","",""],["CreateAddresses","","CreateAddresses.html","",""],["CreateBaptismalCertificates","","CreateBaptismalCertificates.html","",""],["CreateCandidateEvents","","CreateCandidateEvents.html","",""],["CreateCandidateSheets","","CreateCandidateSheets.html","",""],["CreateConfirmationEventCandidateEvents","","CreateConfirmationEventCandidateEvents.html","",""],["CreateConfirmationEvents","","CreateConfirmationEvents.html","",""],["CreateRetreatVerifications","","CreateRetreatVerifications.html","",""],["CreateScannedImages","","CreateScannedImages.html","",""],["CreateVisitors","","CreateVisitors.html","",""],["CustomDeviseMailer","","CustomDeviseMailer.html","","<p>Custom Devise Mailer tasks\n"],["DescriptionsController","","DescriptionsController.html","","<p>A fixture used by rubocop extensions to test uniformity of documentation\n"],["Dev","","Dev.html","",""],["Dev::CandAccountConfirmationsController","","Dev/CandAccountConfirmationsController.html","","<p>Handles Confirmation tasks\n"],["Dev::CandidatesController","","Dev/CandidatesController.html","","<p>Used when candidate is signed in (as opposed to admin, who has authority to\ndo the same thing).\n"],["Dev::PasswordsController","","Dev/PasswordsController.html","","<p>Handles Password tasks\n"],["Dev::RegistrationsController","","Dev/RegistrationsController.html","","<p>Handles Registration tasks\n"],["DeviseCreateAdmins","","DeviseCreateAdmins.html","",""],["DeviseCreateUsers","","DeviseCreateUsers.html","",""],["DeviseHelpers","","DeviseHelpers.html","",""],["DeviseHelpersAdmin","","DeviseHelpersAdmin.html","",""],["DeviseHelpersNew","","DeviseHelpersNew.html","",""],["DevisePermittedParameters","","DevisePermittedParameters.html","",""],["DeviseRails5Helpers","","DeviseRails5Helpers.html","",""],["DeviseRails5Helpers::Capybara","","DeviseRails5Helpers/Capybara.html","",""],["DeviseRails5Helpers::Capybara::Node","","DeviseRails5Helpers/Capybara/Node.html","",""],["DeviseRails5Helpers::Capybara::Node::Simple","","DeviseRails5Helpers/Capybara/Node/Simple.html","",""],["DummyGoodResponse","","DummyGoodResponse.html","","<p>Dummy response\n"],["EmailStuff","","EmailStuff.html","",""],["Event","","Event.html","",""],["Event::Document","","Event/Document.html","",""],["Event::Other","","Event/Other.html","",""],["Event::Route","","Event/Route.html","",""],["EventCompleteValidator","","EventCompleteValidator.html","","<p>Event Complete Validator Helper\n"],["ExportExcelCandJob","","ExportExcelCandJob.html","","<p>fillme in\n"],["ExportExcelJob","","ExportExcelJob.html","","<p>Handle putting the exporting of the database to a seperate process with\nresult being mailed tot the admin. …\n"],["ExportExcelJobSpec","","ExportExcelJobSpec.html","",""],["ExportListsController","","ExportListsController.html","","<p>Handles exporting to excel spread sheets.\n"],["Features","","Features.html","",""],["Features::SessionHelpers","","Features/SessionHelpers.html","",""],["FileHelper","","FileHelper.html","","<p>File Helper\n"],["InitializeChsDueDate","","InitializeChsDueDate.html","",""],["InitializeChsDueDateSave","","InitializeChsDueDateSave.html","",""],["MailPart","","MailPart.html","","<p>represents section of mass mailing in the editor and email.\n"],["MethodDocRange","","MethodDocRange.html","",""],["MigrateAndRemoveOldImages","","MigrateAndRemoveOldImages.html","",""],["NoArgsController","","NoArgsController.html","","<p>Handles Common Application tasks\n"],["NoCommentController","","NoCommentController.html","","<p>Handles Common Application tasks\n"],["Object","","Object.html","",""],["OfflineResponse","","OfflineResponse.html","","<p>An exception used when running tests and you are not connected to the\ninternet.\n"],["ParametersController","","ParametersController.html","","<p>A fixture used by rubocop extensions to test uniformity of documentation\n"],["ParamsGreaterThanArgsController","","ParamsGreaterThanArgsController.html","","<p>Handles Common Application tasks\n"],["ParamsLessThanArgsController","","ParamsLessThanArgsController.html","","<p>Handles Common Application tasks\n"],["ParmNameDoesNotMatchArgumentNameController","","ParmNameDoesNotMatchArgumentNameController.html","","<p>Handles Common Application tasks\n"],["PickConfirmationName","","PickConfirmationName.html","","<p>Active Record\n"],["PluckCan","","PluckCan.html","","<p>This was created in an attempt to keep DB objects from being created to\ngenerate the sorting_candidate_selection …\n"],["RegistrationsController","","RegistrationsController.html","","<p>Handles Registration tasks\n"],["RegistrationsHelper","","RegistrationsHelper.html","","<p>Registrations Helper\n"],["RemoveChristianMinistryFilenameFromChristianMinistries","","RemoveChristianMinistryFilenameFromChristianMinistries.html","",""],["RemoveConfirmationFromCandidates","","RemoveConfirmationFromCandidates.html","",""],["RemovePickConfirmationNameFilenameFromPIckConfirmationNames","","RemovePickConfirmationNameFilenameFromPIckConfirmationNames.html","",""],["RemoveSponsorAgreementFromCandidates","","RemoveSponsorAgreementFromCandidates.html","",""],["RenameAdminConfirmedToVerified","","RenameAdminConfirmedToVerified.html","",""],["RenameCandiatesColumnCandiateId","","RenameCandiatesColumnCandiateId.html","",""],["RenameDueDateToTheWayDueDate","","RenameDueDateToTheWayDueDate.html","",""],["RenameFillOutCandidateInformationSheet","","RenameFillOutCandidateInformationSheet.html","",""],["RenamePickConfirmationName","","RenamePickConfirmationName.html","",""],["RenameSignAgreement","","RenameSignAgreement.html","",""],["RenameUploadBaptismalCertificate","","RenameUploadBaptismalCertificate.html","",""],["RenameUserToCandidate","","RenameUserToCandidate.html","",""],["RetreatVerification","","RetreatVerification.html","","<p>Active Record\n"],["ReturnsController","","ReturnsController.html","","<p>A fixture used by rubocop extensions to test uniformity of documentation\n"],["RuboCop","","RuboCop.html","",""],["RuboCop::Cop","","RuboCop/Cop.html","",""],["RuboCop::Cop::Style","","RuboCop/Cop/Style.html","",""],["RuboCop::Cop::Style::PublicMethodDocumentation","","RuboCop/Cop/Style/PublicMethodDocumentation.html","","<p>This cop checks for missing public method documentation of classes and\nmodules. Classes with no body …\n"],["RuboCop::Cop::Team","","RuboCop/Cop/Team.html","","<p>FIXME\n"],["ScannedImage","","ScannedImage.html","","<p>Active Record\n"],["SendEmailJob","","SendEmailJob.html","","<p>Send Email Job\n"],["SendGridMail","","SendGridMail.html","","<p>Generates and sends email through SendGrid\n<p>Parameters:\n<p><code>:admin</code> The admin logged in.  If sent then doing …\n"],["SendGridMailSpec","","SendGridMailSpec.html","",""],["SendResetEmailJob","","SendResetEmailJob.html","","<p>Send Reset Email Job\n"],["SideBar","","SideBar.html","",""],["SortingCandListHelpers","","SortingCandListHelpers.html","",""],["SponsorCovenant","","SponsorCovenant.html","","<p>Active Record\n"],["ToDo","","ToDo.html","","<p>Used to conect CandaditeEvent to ConfirmationEvent\n"],["ViewsHelpers","","ViewsHelpers.html","",""],["Visitor","","Visitor.html","","<p>holder of visitor page info.\n"],["VisitorsController","","VisitorsController.html","","<p>Handles Admin tasks\n"],["about","VisitorsController","VisitorsController.html#method-i-about","()","<p>setup for about page on the top menu bar.\n"],["about_app","VisitorsController","VisitorsController.html#method-i-about_app","()","<p>setup for about app page in help menu\n"],["account_confirmed?","Candidate","Candidate.html#method-i-account_confirmed-3F","()","<p>returns whether the User account has been confirmed\n<p>Returns:\n<p><code>Boolean</code>\n"],["account_name","PluckCan","PluckCan.html#method-i-account_name","()","<p>account_name\n<p>Returns:\n<p><code>String</code>\n"],["active_tab_class","ApplicationHelper","ApplicationHelper.html#method-i-active_tab_class","(*paths)","<p>used to show selection of sidebar links\n<p>Parameters:\n<p><code>:paths</code>\n"],["add_baptismal_certificate_image","Object","Object.html#method-i-add_baptismal_certificate_image","(candidate)",""],["add_candidate_event","Candidate","Candidate.html#method-i-add_candidate_event","(confirmation_event)","<p>Adds a candidate event as part of the creation process\n<p>Parameters:\n<p><code>:confirmation_event</code> common event\n"],["add_candidate_events","AppFactory","AppFactory.html#method-c-add_candidate_events","(candidate)","<p>add candidate events to candidate based on ConfirmationEvents\n<p>Parameters:\n<p><code>:candidate</code> options for a new …\n"],["add_confirmation_event","AppFactory","AppFactory.html#method-c-add_confirmation_event","(event_name)","<p>create a new Admin\n<p>Parameters:\n<p><code>:options</code> options for a new Admin\n"],["add_confirmation_event_due_date","AppFactory","AppFactory.html#method-c-add_confirmation_event_due_date","(event_name)","<p>create or update ConfirmationEvent.  Update all candidates with new\nConfirmationEvent\n<p>Parameters:\n<p><code>:event_name</code> …\n"],["add_missing_events","CandidateImport","CandidateImport.html#method-i-add_missing_events","(missing_events)","<p>Add events expectd to be missing\n<p>Parameters:\n<p><code>:missing_events</code> Array: of expected missing ConfirmationEvents\n…\n"],["add_orphaned_table_rows","CandidateImport","CandidateImport.html#method-i-add_orphaned_table_rows","()","<p>Walks through the associations searching for associations that are created\nbut not associated with parent …\n"],["add_retreat_verification_image","Object","Object.html#method-i-add_retreat_verification_image","(candidate)",""],["add_sponsor_covenant_image","Object","Object.html#method-i-add_sponsor_covenant_image","(candidate)",""],["add_sponsor_eligibility_image","Object","Object.html#method-i-add_sponsor_eligibility_image","(candidate)",""],["add_wb","ExportListsController","ExportListsController.html#method-i-add_wb","(wbk, candidates, title, extra_columns, value_lambdas)",""],["adhoc","CandidatesMailer","CandidatesMailer.html#method-i-adhoc","(_admin, candidate_mailer_text)","<p>generate email body for adhoc message - basically a free format email.\n<p>Parameters:\n<p><code>:admin</code> Admin: not used …\n"],["adhoc","SendGridMail","SendGridMail.html#method-i-adhoc","(subject_mail_part, attach_file, body_mail_part)","<p>Generate and send adhoc email\n<p>Parameters:\n<p><code>:subject_mail_part</code> The subject of the email put in by the\nadmin …\n"],["adhoc_mailing","AdminsController","AdminsController.html#method-i-adhoc_mailing","()","<p>edit adhoc email\n<p>Attributes:\n<p><code>:candidate</code> holder of\n"],["adhoc_mailing_update","AdminsController","AdminsController.html#method-i-adhoc_mailing_update","()","<p>update adhoc email - send email\n<p>Attributes:\n<p><code>:candidate</code> holder of\n"],["adhoc_test","CandidatesMailer","CandidatesMailer.html#method-i-adhoc_test","(admin, candidate_mailer_text)","<p>generate email body for adhoc message - send email to admin. showing body,\nemail addresses &amp; subject …\n"],["adhoc_test","SendGridMail","SendGridMail.html#method-i-adhoc_test","(subject_mail_part, attach_file, body_mail_part)","<p>Generate and send adhoc test email\n<p>Parameters:\n<p><code>:subject_mail_part</code> The subject of the email put in by the …\n"],["admin?","CandidatesController","CandidatesController.html#method-i-admin-3F","()","<p>show candidate\n<p>Returns:\n<p><code>Boolean</code>\n"],["admin?","Dev::CandidatesController","Dev/CandidatesController.html#method-i-admin-3F","()","<p>returns false\n"],["after_confirmation_path_for","Dev::CandAccountConfirmationsController","Dev/CandAccountConfirmationsController.html#method-i-after_confirmation_path_for","(resource, _resource_name, errors)","<p>Where to go after user(account) is confirmed\n<p>Attributes\n<p><code>resource</code> - candidate\n"],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource)",""],["after_update_path_for","Dev::RegistrationsController","Dev/RegistrationsController.html#method-i-after_update_path_for","(_resource_or_scope)","<p>candidate cannot create a candidate\n<p>Parameters:\n<p><code>:resource_or_scope</code> Not used\n"],["after_update_path_for","RegistrationsController","RegistrationsController.html#method-i-after_update_path_for","(_resource_or_scope)","<p>return current_candidate\n<p>Parameters:\n<p><code>:resource_or_scope</code> Not used\n"],["all_event_names","Object","Object.html#method-i-all_event_names","()",""],["app_sanitize","ApplicationHelper","ApplicationHelper.html#method-i-app_sanitize","(html)","<p>common method for sanitizing html that is input by the administrator.\n<p>Parameters:\n<p><code>:html</code> string to be sanitize …\n"],["attachments","SendGridMailSpec","SendGridMailSpec.html#method-i-attachments","()",""],["attending","PluckCan","PluckCan.html#method-i-attending","()","<p>attending\n<p>Returns:\n<p><code>Symbol</code> :attending\n"],["attends_stmm_params","SponsorCovenant","SponsorCovenant.html#method-c-attends_stmm_params","()","<p>Editable attributes when sponsor belongs to stmm\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["attends_stmm_validation_params","SponsorCovenant","SponsorCovenant.html#method-c-attends_stmm_validation_params","()","<p>Required attributes when sponsor belongs to stmm\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["attributes_attributes_no_coexisting","AttributesController","AttributesController.html#method-i-attributes_attributes_no_coexisting","(arg1)","<p>Attributes and Parameters should not exist on same method\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["attributes_should_be_before_description","AttributesController","AttributesController.html#method-i-attributes_should_be_before_description","()","<p>Attributes:\n<p><code>:id</code> Candidate id\n\n<p>Attributes should be before Description\n"],["attributes_should_be_before_returns","AttributesController","AttributesController.html#method-i-attributes_should_be_before_returns","()","<p>Attributes should be before Returns\n<p>Returns:\n<p><code>Boolean</code>\n"],["awaiting_admin?","CandidateEvent","CandidateEvent.html#method-i-awaiting_admin-3F","()","<p>Is the candidate event waiting verification from admin\n<p>Returns:\n<p><code>Boolean</code>\n"],["awaiting_admin?","CandidateEvent","CandidateEvent.html#method-c-awaiting_admin-3F","(due_date, completed_date, verified)","<p>Is the candidate event waiting verification from admin\n<p>Parameters:\n<p><code>:due_date</code> Date: The due_date -if nil …\n"],["awaiting_admin_events","Candidate","Candidate.html#method-i-awaiting_admin_events","()","<p>returns array of awaiting admin events\n<p>Returns:\n<p><code>Array</code> of awaiting admin candidate events\n"],["awaiting_candidate?","CandidateEvent","CandidateEvent.html#method-c-awaiting_candidate-3F","(due_date, completed_date)","<p>Is the candidate event waiting for information from the candidate\n<p>Parameters:\n<p><code>:due_date</code> Date: The due_date …\n"],["awaiting_candidate?","CandidateEvent","CandidateEvent.html#method-i-awaiting_candidate-3F","()","<p>Is the candidate event waiting for information from the candidate\n<p>Returns:\n<p><code>Boolean</code>\n"],["awaiting_candidate_events","Candidate","Candidate.html#method-i-awaiting_candidate_events","()","<p>returns array of &#39;awaiting candidate&#39; events\n<p>Returns:\n<p><code>Array</code> of &#39;awaiting candidate&#39; candidate …\n"],["baptism","ExportListsController","ExportListsController.html#method-i-baptism","()","<p>downloads spreadsheet for event baptism per candidate\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["baptismal_certificate","CandidatePDFDocument","CandidatePDFDocument.html#method-i-baptismal_certificate","()","<p>Generate Baptismal Certificate\n"],["baptismal_external_verification","Candidate","Candidate.html#method-c-baptismal_external_verification","()","<p>baptismal certificate needs admin verification\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["baptized_at_stmm_show_no","BaptismalCertificate","BaptismalCertificate.html#method-i-baptized_at_stmm_show_no","()","<p>Whether to show baptized as no\n<p>Returns:\n<p><code>Boolean</code>\n"],["baptized_at_stmm_show_yes","BaptismalCertificate","BaptismalCertificate.html#method-i-baptized_at_stmm_show_yes","()","<p>Whether to show baptized as yes\n<p>Returns:\n<p><code>Boolean</code>\n"],["basic_permitted_params","Address","Address.html#method-c-basic_permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_permitted_params","BaptismalCertificate","BaptismalCertificate.html#method-c-basic_permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_permitted_params","CandidateSheet","CandidateSheet.html#method-c-basic_permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_permitted_params","RetreatVerification","RetreatVerification.html#method-c-basic_permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p>Array of attributes\n"],["basic_permitted_params","SponsorCovenant","SponsorCovenant.html#method-c-basic_permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_permitted_params","Visitor","Visitor.html#method-c-basic_permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_validatiion_params","Address","Address.html#method-c-basic_validatiion_params","()","<p>Required attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_validation_params","BaptismalCertificate","BaptismalCertificate.html#method-c-basic_validation_params","()","<p>Required attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_validation_params","CandidateSheet","CandidateSheet.html#method-c-basic_validation_params","()","<p>Required attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["basic_validation_params","RetreatVerification","RetreatVerification.html#method-c-basic_validation_params","()","<p>Required attributes\n<p>Returns:\n<p>Array of attributes\n"],["bcc_email","Candidate","Candidate.html#method-i-bcc_email","()","<p>If bcc is called use this email  address\n<p>Returns:\n<p><code>String</code>\n"],["before?","MethodDocRange","MethodDocRange.html#method-i-before-3F","(method_doc_range)",""],["body","DummyGoodResponse","DummyGoodResponse.html#method-i-body","()",""],["body","OfflineResponse","OfflineResponse.html#method-i-body","()",""],["build_associations","BaptismalCertificate","BaptismalCertificate.html#method-i-build_associations","()","<p>build church address\n"],["build_associations","Candidate","Candidate.html#method-i-build_associations","()","<p>builds candidate&#39;s associations\n<p>Returns:\n<p><code>Boolean</code>\n"],["build_associations","CandidateSheet","CandidateSheet.html#method-i-build_associations","()","<p>build address\n"],["build_resource","Dev::RegistrationsController","Dev/RegistrationsController.html#method-i-build_resource","(hash = nil)","<p>builds a candidate then adds candidate events\n<p>Parameters:\n<p><code>:hash</code> optional\n"],["cand_account_confirmation","VisitorsController","VisitorsController.html#method-i-cand_account_confirmation","()","<p>If id == -1 then create a new candidate otherwise find one.\n<p>Attributes\n<p><code>:id</code> Candidate id\n"],["candidate_event_id","PluckCan","PluckCan.html#method-i-candidate_event_id","()","<p>candidate_event_id\n<p>Returns:\n<p><code>String</code>\n"],["candidate_event_state","ExportListsController","ExportListsController.html#method-c-candidate_event_state","(event_name)","<p>returns lambda which when called with candidate will return the\nCandidateEvent status of event_name\n<p>Parameters: …\n"],["candidate_event_to_path","ApplicationHelper","ApplicationHelper.html#method-i-candidate_event_to_path","(confirmation_event_name, candidate_id)","<p>used to show selection of sidebar links\n<p>Parameters:\n<p><code>:confirmation_event_name</code>\n"],["candidate_events_columns","SortingCandListHelpers","SortingCandListHelpers.html#method-i-candidate_events_columns","(confirmation_event = nil)",""],["candidate_events_sorted","Candidate","Candidate.html#method-i-candidate_events_sorted","()","<p>Sorts candidate events in priorty order (to be cmpleted first)\n<p>Returns:\n<p><code>Array</code> candidate events\n"],["candidate_from_token","Dev::PasswordsController","Dev/PasswordsController.html#method-i-candidate_from_token","(original_token)","<p>Lookup candidate based on original-token\n<p>Parameters:\n<p><code>:original_token</code>\n"],["candidate_note","CandidatesController","CandidatesController.html#method-i-candidate_note","()","<p>edit candidate note\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["candidate_note_update","CandidatesController","CandidatesController.html#method-i-candidate_note_update","()","<p>update candidate note\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["candidate_params","ApplicationController","ApplicationController.html#method-i-candidate_params","()",""],["candidate_params","Candidate","Candidate.html#method-c-candidate_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["candidate_permitted_params","ApplicationController","ApplicationController.html#method-i-candidate_permitted_params","()",""],["candidate_sheet","CandidatePDFDocument","CandidatePDFDocument.html#method-i-candidate_sheet","()","<p>Generate Candidate sheet\n"],["candidate_sheet","CommonCandidatesController","CommonCandidatesController.html#method-i-candidate_sheet","()","<p>edit candidate_sheet information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["candidate_sheet_update","CommonCandidatesController","CommonCandidatesController.html#method-i-candidate_sheet_update","()","<p>update candidate_sheet information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["candidate_sheet_verify","CandidatesController","CandidatesController.html#method-i-candidate_sheet_verify","()","<p>edit candidate_sheet verify\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["candidate_sheet_verify_update","CandidatesController","CandidatesController.html#method-i-candidate_sheet_verify_update","()","<p>update candidate_sheet verify\n<p>Attributes:\n<p><code>:commit</code> legal values\n"],["candidates_columns","SortingCandListHelpers","SortingCandListHelpers.html#method-i-candidates_columns","()",""],["candidates_info","ApplicationController","ApplicationController.html#method-i-candidates_info","(args = {})","<p>sets info for _sorting_candidate_selection.html.erb\n<p>Parameters:\n<p><code><em>selected_candidate_ids</em></code> Array of initially …\n"],["cc_email","CandidateSheet","CandidateSheet.html#method-i-cc_email","()","<p>Attempts to guarentee that there is always a &#39;to&#39; email\n\n<pre>1. if parent_1 email is not nil and not ...</pre>\n"],["cc_email_2","CandidateSheet","CandidateSheet.html#method-i-cc_email_2","()","<p>Attempts to guarantee that there is always a &#39;to&#39; email\n\n<pre>1. if parent_2 email is not nil and not ...</pre>\n"],["certificate_file_params","ApplicationController","ApplicationController.html#method-i-certificate_file_params","()",""],["change","AddCandidateColumns","AddCandidateColumns.html#method-i-change","()",""],["change","AddCandidateNoteToCandidates","AddCandidateNoteToCandidates.html#method-i-change","()",""],["change","AddConfirmationNameToCandidate","AddConfirmationNameToCandidate.html#method-i-change","()",""],["change","AddFileColumnsToSponsorCovenants","AddFileColumnsToSponsorCovenants.html#method-i-change","()",""],["change","AddInstructionsToConfirmationEvent","AddInstructionsToConfirmationEvent.html#method-i-change","()",""],["change","AddMiddleNameToCandidateSheet","AddMiddleNameToCandidateSheet.html#method-i-change","()",""],["change","AddNameToAdmins","AddNameToAdmins.html#method-i-change","()",""],["change","AddNameToUsers","AddNameToUsers.html#method-i-change","()",""],["change","AddSignedAgreementToCandidate","AddSignedAgreementToCandidate.html#method-i-change","()",""],["change","ChangeDefaultValueToAddressCity","ChangeDefaultValueToAddressCity.html#method-i-change","()",""],["change","ChangeRetreatFileContentInRetreatVerification","ChangeRetreatFileContentInRetreatVerification.html#method-i-change","()",""],["change","CreateAddresses","CreateAddresses.html#method-i-change","()",""],["change","CreateBaptismalCertificates","CreateBaptismalCertificates.html#method-i-change","()",""],["change","CreateCandidateEvents","CreateCandidateEvents.html#method-i-change","()",""],["change","CreateCandidateSheets","CreateCandidateSheets.html#method-i-change","()",""],["change","CreateConfirmationEventCandidateEvents","CreateConfirmationEventCandidateEvents.html#method-i-change","()",""],["change","CreateConfirmationEvents","CreateConfirmationEvents.html#method-i-change","()",""],["change","CreateRetreatVerifications","CreateRetreatVerifications.html#method-i-change","()",""],["change","CreateScannedImages","CreateScannedImages.html#method-i-change","()",""],["change","DeviseCreateAdmins","DeviseCreateAdmins.html#method-i-change","()",""],["change","DeviseCreateUsers","DeviseCreateUsers.html#method-i-change","()",""],["change","InitializeChsDueDate","InitializeChsDueDate.html#method-i-change","()",""],["change","InitializeChsDueDateSave","InitializeChsDueDateSave.html#method-i-change","()",""],["change","MigrateAndRemoveOldImages","MigrateAndRemoveOldImages.html#method-i-change","()",""],["change","RemoveChristianMinistryFilenameFromChristianMinistries","RemoveChristianMinistryFilenameFromChristianMinistries.html#method-i-change","()",""],["change","RemovePickConfirmationNameFilenameFromPIckConfirmationNames","RemovePickConfirmationNameFilenameFromPIckConfirmationNames.html#method-i-change","()",""],["change","RemoveSponsorAgreementFromCandidates","RemoveSponsorAgreementFromCandidates.html#method-i-change","()",""],["change","RenameAdminConfirmedToVerified","RenameAdminConfirmedToVerified.html#method-i-change","()",""],["change","RenameCandiatesColumnCandiateId","RenameCandiatesColumnCandiateId.html#method-i-change","()",""],["change","RenameDueDateToTheWayDueDate","RenameDueDateToTheWayDueDate.html#method-i-change","()",""],["change","RenameUploadBaptismalCertificate","RenameUploadBaptismalCertificate.html#method-i-change","()",""],["change","RenameUserToCandidate","RenameUserToCandidate.html#method-i-change","()",""],["change_completed_date","Object","Object.html#method-i-change_completed_date","(date)",""],["change_due_date","Object","Object.html#method-i-change_due_date","(date)",""],["check_events","CandidateImport","CandidateImport.html#method-i-check_events","()","<p>Check to seeif any ConfirmaEvents are missing.  It stores missing store in\nunknown_confirmation_events …\n"],["check_events","CandidateImportsController","CandidateImportsController.html#method-i-check_events","()","<p>Checks for missing ConfirmationEvents if :missing is supplied then update\nsystem with missing ConfirmationEvents …\n"],["check_workbook","Object","Object.html#method-i-check_workbook","(package, extra_colum = nil, column_values = nil)",""],["checkbox_checked","MailPart","MailPart.html#method-i-checkbox_checked","()","<p>checkbox tag attribute\n<p>Returns:\n<p><code>:String</code>\n"],["checkbox_name","MailPart","MailPart.html#method-i-checkbox_name","()","<p>checkbox tag attribute\n<p>Returns:\n<p><code>:String</code>\n"],["checkbox_value","MailPart","MailPart.html#method-i-checkbox_value","()","<p>checkbox tag attribute\n<p>Returns:\n<p><code>:String</code>\n"],["chosen_baptized_at_stmm?","BaptismalCertificate","BaptismalCertificate.html#method-i-chosen_baptized_at_stmm-3F","()","<p>Whether candidate has chosen that they were baptised at St MM\n<p>Returns:\n<p><code>Boolean</code>\n"],["chosen_first_comm_at_stmm?","BaptismalCertificate","BaptismalCertificate.html#method-i-chosen_first_comm_at_stmm-3F","()","<p>Whether candidate has chosen that they received first communion at St MM\n<p>Returns:\n<p><code>Boolean</code>\n"],["christian_ministry","CandidatePDFDocument","CandidatePDFDocument.html#method-i-christian_ministry","()","<p>Generate Christian Ministry\n"],["christian_ministry","CommonCandidatesController","CommonCandidatesController.html#method-i-christian_ministry","()","<p>edit christian_ministry information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["christian_ministry_update","CommonCandidatesController","CommonCandidatesController.html#method-i-christian_ministry_update","()","<p>update christian_ministry information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["christian_ministry_verify","CandidatesController","CandidatesController.html#method-i-christian_ministry_verify","()","<p>edit christian_ministry verify\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["christian_ministry_verify_update","CandidatesController","CandidatesController.html#method-i-christian_ministry_verify_update","()","<p>update christian_ministry verify\n<p>Attributes:\n<p><code>:commit</code> legal values\n"],["clean_associations","CandidateImport","CandidateImport.html#method-i-clean_associations","(clazz, checked = [], do_not_destroy = [Admin, ConfirmationEvent])","<p>Used to start a new year - cleans out tables for new year.\n<p>Parameters:\n<p><code>:clazz</code> Class: class under consideration …\n"],["clean_dir","Object","Object.html#method-i-clean_dir","(dir)",""],["code","OfflineResponse","OfflineResponse.html#method-i-code","()",""],["coming_due?","CandidateEvent","CandidateEvent.html#method-c-coming_due-3F","(due_date, completed_date)","<p>Is the candidate event coming due within the next 30 days.\n<p>Parameters:\n<p><code>:due_date</code> Date: The due_date -if …\n"],["coming_due?","CandidateEvent","CandidateEvent.html#method-i-coming_due-3F","()","<p>Is the candidate event coming due within the next 30 days.\n<p>Returns:\n<p><code>Boolean</code>\n"],["coming_due_events","Candidate","Candidate.html#method-i-coming_due_events","()","<p>returns array of coming due events\n<p>Returns:\n<p><code>Array</code> of coming due candidate events\n"],["common_columns","SortingCandListHelpers","SortingCandListHelpers.html#method-i-common_columns","()",""],["common_event","CandidatePDFDocument","CandidatePDFDocument.html#method-i-common_event","(event, cell1, cell2)","<p>Output the event information\n<p>Parameters:\n<p><code>:event</code> CandidateEvent\n"],["common_event_columns","SortingCandListHelpers","SortingCandListHelpers.html#method-i-common_event_columns","()",""],["common_image","CandidatePDFDocument","CandidatePDFDocument.html#method-i-common_image","(scanned_image, label)","<p>Generate image\n<p>Parameters:\n<p><code>:scanned_image</code> scanned image\n"],["common_non_event_columns","SortingCandListHelpers","SortingCandListHelpers.html#method-i-common_non_event_columns","()",""],["completed","Candidate","Candidate.html#method-i-completed","()","<p>returns array of completed events\n<p>Returns:\n<p><code>Array</code> of completed candidate events\n"],["completed?","CandidateEvent","CandidateEvent.html#method-c-completed-3F","(due_date, verified)","<p>Is the candidate event done\n<p>Parameters:\n<p><code>:due_date</code> Date: The due_date -if nil then not started.\n"],["completed?","CandidateEvent","CandidateEvent.html#method-i-completed-3F","()","<p>Is the candidate event completed\n<p>Returns:\n<p><code>Boolean</code>\n"],["completed_awaiting_events","CandidatesMailerText","CandidatesMailerText.html#method-i-completed_awaiting_events","()","<p>awaiting admin verification CandidateEvent\n<p>Returns:\n<p><code>Array</code> CandidateEvent\n"],["completed_date","PluckCan","PluckCan.html#method-i-completed_date","()","<p>completed_date\n<p>Returns:\n<p><code>Date</code>\n"],["completed_events","CandidatesMailerText","CandidatesMailerText.html#method-i-completed_events","()","<p>completed CandidateEvent\n<p>Returns:\n<p><code>Array</code> CandidateEvent\n"],["conf_event_id","PluckCan","PluckCan.html#method-i-conf_event_id","(cand_id, event_name)","<p>Get Confirmation event id.\n<p>Parameters:\n<p><code>:cand_id</code> Candidate id.\n"],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()",""],["configure_permitted_parameters","DevisePermittedParameters","DevisePermittedParameters.html#method-i-configure_permitted_parameters","()",""],["confirm_account","Candidate","Candidate.html#method-i-confirm_account","()","<p>confirm the user account\n<p>Returns:\n<p><code>Boolean</code>\n"],["confirmation_events_columns","SortingCandListHelpers","SortingCandListHelpers.html#method-i-confirmation_events_columns","(confirmation_event_name)",""],["confirmation_events_sorted","ExportExcelCandJob","ExportExcelCandJob.html#method-i-confirmation_events_sorted","()","<p>return sorted array of ConfirmationEvent by name\n<p>Returns:\n<p><code>Array</code> of ConfirmationEvent\n"],["confirmation_instructions","Candidate","Candidate.html#method-i-confirmation_instructions","(candidate_mailer_text)","<p>get expanded account confirmation instructions\n<p>Parameters:\n<p><code>:candidate_mailer_text</code> expands instructions …\n"],["confirmation_instructions","SendGridMail","SendGridMail.html#method-i-confirmation_instructions","()","<p>Generate and send candidate user id confirmation email\n"],["confirmation_name","CandidatePDFDocument","CandidatePDFDocument.html#method-i-confirmation_name","()","<p>Generate confirmation name\n"],["confirmation_name","ExportListsController","ExportListsController.html#method-i-confirmation_name","()","<p>downloads spreadsheet for event confirmation name per candidate\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["confirmation_name_external_verification","Candidate","Candidate.html#method-c-confirmation_name_external_verification","()","<p>confirmation name needs admin verification\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["confirmation_path","DeviseHelpers","DeviseHelpers.html#method-i-confirmation_path","(name)",""],["confirmed?","PluckCan","PluckCan.html#method-i-confirmed-3F","()","<p>confirmed?\n<p>Returns:\n<p><code>Boolean</code>\n"],["contact_information","VisitorsController","VisitorsController.html#method-i-contact_information","()","<p>setup for contact in help menu\n"],["content_type","ExportExcelCandJob","ExportExcelCandJob.html#method-i-content_type","(type)","<p>get content type\n<p>Parameters:\n<p><code>:type</code> Candidate:\n"],["convert_email","SendGridMail","SendGridMail.html#method-i-convert_email","()","<p>convert illegal email to one of these in non-production\n<p>Returns:\n<p><code>Array</code> of legal emails for non-production …\n"],["convert_emails","SendGridMail","SendGridMail.html#method-i-convert_emails","(emails, used)","<p>In non-production(test development or pipeline=staging) will convert\nillegal non-production email addresses …\n"],["convert_if_not_production","SendGridMail","SendGridMail.html#method-i-convert_if_not_production","(email, used = [], legal_used = [])","<p>In non-production(test development or pipeline=staging) will convert\nillegal non-production email address …\n"],["covenant_agreement","CandidatePDFDocument","CandidatePDFDocument.html#method-i-covenant_agreement","()","<p>Generate Covenant agreement\n"],["create","AppFactory","AppFactory.html#method-c-create","(resource_class)","<p>create a resource_class\n<p>Parameters:\n<p><code>:resource_class</code> Candidate or Admin\n"],["create","Dev::CandAccountConfirmationsController","Dev/CandAccountConfirmationsController.html#method-i-create","()","<p>Looks at email provided to make sure associate with a candidate.  If so\nsend initial message.\n<p>Attributes …\n"],["create","Dev::RegistrationsController","Dev/RegistrationsController.html#method-i-create","()","<p>candidate cannot create a candidate\n"],["create","RegistrationsController","RegistrationsController.html#method-i-create","()","<p>create Candidate\n"],["create_admin","AppFactory","AppFactory.html#method-c-create_admin","(options={})","<p>create a new Admin\n<p>Parameters:\n<p><code>:options</code> options for a new Admin\n"],["create_candidate","AppFactory","AppFactory.html#method-c-create_candidate","()","<p>create a new Candidate and then add the candidate_events\n<p>Returns:\n<p>New instance\n"],["create_candidate","Object","Object.html#method-i-create_candidate","(prefix, should_confirm = true)",""],["create_candidate","ViewsHelpers","ViewsHelpers.html#method-i-create_candidate","(first_name, middle_name, last_name)",""],["create_candidate_event","Object","Object.html#method-i-create_candidate_event","(candidate, completed_date, verified, confirmation_event)",""],["create_candidate_events","Object","Object.html#method-i-create_candidate_events","()",""],["create_candidate_local","Object","Object.html#method-i-create_candidate_local","(account_name, first, last)",""],["create_candidate_old","Object","Object.html#method-i-create_candidate_old","(account_name, first, last)",""],["create_mail","SendGridMail","SendGridMail.html#method-i-create_mail","(subject_mail_part, email_type, account_name)","<p>Generate and email.\n<p>category is used to distinguish emails in SendGrid application\n<p>Parameters:\n"],["create_personalization","SendGridMail","SendGridMail.html#method-i-create_personalization","(candidate, sg_mail, admin, *subs)","<p>Create personalizations\n<p>Parameters:\n<p><code>:candidate</code> The candidate.\n"],["create_scanned_image","Object","Object.html#method-i-create_scanned_image","()",""],["create_xlsx","ExportListsController","ExportListsController.html#method-i-create_xlsx","(external_verify, verify, verified, not_complete, pre_title, extra_columns = [], value_lambdas = [])","<p>creates spreadsheet with four worksheets showing event information\n<p>Parameters:\n<p><code>:external_verify</code> List of …\n"],["define_grid_page","CandidatePDFDocument","CandidatePDFDocument.html#method-i-define_grid_page","(columns = 4, rows = 20)","<p>define page column and rows\n<p>Parameters:\n<p><code>:columns</code> number of columns\n"],["delete_dir","FileHelper","FileHelper.html#method-i-delete_dir","(dir)","<p>Delete directory\n<p>Parameters:\n<p><code>:dir</code> The event being edited in\nmass_edit_candidates_event.html.erb\n"],["description_begins_with_empty_comment","DescriptionsController","DescriptionsController.html#method-i-description_begins_with_empty_comment","()","<p>Description should not begin with an blank comment ***ERROR\n"],["description_does_not_end_with_empty_comment","DescriptionsController","DescriptionsController.html#method-i-description_does_not_end_with_empty_comment","()","<p>Description should end with a blank comment ***ERROR\n"],["description_missing_with_parameters","DescriptionsController","DescriptionsController.html#method-i-description_missing_with_parameters","(arg1)","<p>Parameters:\n<p><code>:arg1</code> First Parameter\n\n<p>Description should be first ***ERROR\n"],["description_missing_with_parameters_and_returns","DescriptionsController","DescriptionsController.html#method-i-description_missing_with_parameters_and_returns","(arg1)","<p>Parameters:\n<p><code>:arg1</code> First Parameter\n\n<p>Description should be first ***ERROR\n"],["description_missing_with_parameters_and_returns2","DescriptionsController","DescriptionsController.html#method-i-description_missing_with_parameters_and_returns2","(arg1)","<p>Parameters:\n<p><code>:arg1</code> First Parameter\n\n<p>Returns:\n"],["destroy","Dev::RegistrationsController","Dev/RegistrationsController.html#method-i-destroy","()","<p>candidate cannot destroy a candidate\n"],["destroy","RegistrationsController","RegistrationsController.html#method-i-destroy","()","<p>destroy Candidate\n"],["devise_mapping","CandidatesController","CandidatesController.html#method-i-devise_mapping","()","<p>Since going around devise mechanisms - add some helpers back in.\n"],["devise_mapping","Dev::RegistrationsController","Dev/RegistrationsController.html#method-i-devise_mapping","()","<p>get devise mapping for candidate\n"],["devise_mapping","DeviseHelpers","DeviseHelpers.html#method-i-devise_mapping","()",""],["devise_mapping","DeviseHelpersAdmin","DeviseHelpersAdmin.html#method-i-devise_mapping","()",""],["devise_mapping","DeviseHelpersNew","DeviseHelpersNew.html#method-i-devise_mapping","()",""],["devise_mapping","RegistrationsController","RegistrationsController.html#method-i-devise_mapping","()","<p>devise mapping for candidate\n"],["do_document","CandidatePDFDocument","CandidatePDFDocument.html#method-i-do_document","()","<p>Generate PDF document\n"],["document_name","CandidatePDFDocument","CandidatePDFDocument.html#method-i-document_name","()","<p>Name to save the pdf document\n<p>Returns:\n<p><code>String</code>\n"],["document_name","CandidatePDFDocument","CandidatePDFDocument.html#method-c-document_name","(candidate)","<p>Name to save the pdf document\n<p>Returns:\n<p><code>String</code>\n"],["down","AddAttendRetreat","AddAttendRetreat.html#method-i-down","()",""],["down","AddCandidateInformationSheet","AddCandidateInformationSheet.html#method-i-down","()",""],["down","AddChristianMinistryEvent","AddChristianMinistryEvent.html#method-i-down","()",""],["down","AddColumnFirstCommAtStmm","AddColumnFirstCommAtStmm.html#method-i-down","()",""],["down","AddConfirmableToDevise","AddConfirmableToDevise.html#method-i-down","()",""],["down","AddConfirmationName","AddConfirmationName.html#method-i-down","()",""],["down","AddCovenantAgreement","AddCovenantAgreement.html#method-i-down","()",""],["down","AddParentInformationMeeting","AddParentInformationMeeting.html#method-i-down","()",""],["down","AddPickConfirmationNameEvent","AddPickConfirmationNameEvent.html#method-i-down","()",""],["down","AddSponsorCandidateConfirmationEvent","AddSponsorCandidateConfirmationEvent.html#method-i-down","()",""],["down","AddSponsorCovenant","AddSponsorCovenant.html#method-i-down","()",""],["down","BaptismalCertificate","BaptismalCertificate.html#method-i-down","()",""],["down","ChangeDefaultValueOfBaptizedAtStmm","ChangeDefaultValueOfBaptizedAtStmm.html#method-i-down","()",""],["down","ChangeEventNameSponsorCovenant","ChangeEventNameSponsorCovenant.html#method-c-down","()",""],["down","CreateVisitors","CreateVisitors.html#method-c-down","()",""],["down","RemoveConfirmationFromCandidates","RemoveConfirmationFromCandidates.html#method-i-down","()",""],["down","RenameFillOutCandidateInformationSheet","RenameFillOutCandidateInformationSheet.html#method-i-down","()",""],["down","RenamePickConfirmationName","RenamePickConfirmationName.html#method-i-down","()",""],["down","RenameSignAgreement","RenameSignAgreement.html#method-i-down","()",""],["down","RenameUploadBaptismalCertificate","RenameUploadBaptismalCertificate.html#method-i-down","()",""],["download_document","CommonCandidatesController","CommonCandidatesController.html#method-i-download_document","()","<p>send_pdf to browser\n<p>Attributes:\n<p><code>:name</code> Name of pdf file\n"],["due_date","CandidateEvent","CandidateEvent.html#method-i-due_date","()","<p>Shortcut to due date of the confirmation event based on attending\n<p>Returns:\n<p><code>Date</code>\n"],["edit","CandidatesController","CandidatesController.html#method-i-edit","()","<p>edit candidate\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["edit","Dev::CandidatesController","Dev/CandidatesController.html#method-i-edit","()","<p>Should never be called\n"],["edit","Dev::PasswordsController","Dev/PasswordsController.html#method-i-edit","()","<p>flashes alert if token has expires\n"],["edit_multiple_confirmation_events","AdminsController","AdminsController.html#method-i-edit_multiple_confirmation_events","()","<p>edit ConfirmationEvents\n<p>Attributes:\n<p><code>:id</code> ConfirmationEvent id\n"],["email","Candidate","Candidate.html#method-i-email","()","<p>returns the canidates email - used by Factory Girl\n<p>Returns:\n<p><code>String</code> email address\n"],["email","CandidateSheet","CandidateSheet.html#method-i-email","()","<p>returns the parent_1&#39;s email - used by Factory Girl\n<p>Returns:\n<p><code>String</code>email address\n"],["email=","Candidate","Candidate.html#method-i-email-3D","(value)","<p>sets canidates email to value - used by Factory Girl\n<p>Parameters:\n<p><code>:value</code> String: nil or email address\n"],["email=","CandidateSheet","CandidateSheet.html#method-i-email-3D","(value)","<p>sets canidates email to value - used by Factory Girl\n<p>Parameters:\n<p><code>:value</code> String: nil or email address\n"],["email_changed?","Candidate","Candidate.html#method-i-email_changed-3F","()","<p>returns false - used by Factory Girl\n<p>Returns:\n<p><code>Boolean</code>\n"],["email_changed?","CandidateSheet","CandidateSheet.html#method-i-email_changed-3F","()","<p>returns false - used by Factory Girl\n<p>Returns:\n<p><code>Boolean</code>\n"],["email_error_message","ExportExcelJob","ExportExcelJob.html#method-i-email_error_message","(admin, message, backtrace)",""],["email_error_message","ExportExcelJobSpec","ExportExcelJobSpec.html#method-i-email_error_message","(admin, message, backtrace)",""],["email_error_message","SendGridMail","SendGridMail.html#method-i-email_error_message","(message, backtrace, attach_file_path = nil)","<p>Send error message to admin.\n<p>Parameters:\n<p><code>:message</code> error message\n"],["email_required?","Candidate","Candidate.html#method-i-email_required-3F","()","<p>returns false - used by Factory Girl\n<p>Returns:\n<p><code>Boolean</code>\n"],["email_required?","CandidateSheet","CandidateSheet.html#method-i-email_required-3F","()","<p>returns false - used by Factory Girl\n<p>Returns:\n<p><code>Boolean</code>\n"],["emails","Candidate","Candidate.html#method-i-emails","()","<p>Array of email addresses ignoring the fact they could be nil - devise\n<p>Returns:\n<p><code>Array</code> of Stings\n"],["empty_comm?","MethodDocRange","MethodDocRange.html#method-i-empty_comm-3F","(comment)",""],["end_comment","MethodDocRange","MethodDocRange.html#method-i-end_comment","()",""],["ends_with_empty_comment?","MethodDocRange","MethodDocRange.html#method-i-ends_with_empty_comment-3F","()",""],["event","CandidatesController","CandidatesController.html#method-i-event","()","<p>edit event\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["event","Dev::CandidatesController","Dev/CandidatesController.html#method-i-event","()","<p>Should never be called\n"],["event","Dev::RegistrationsController","Dev/RegistrationsController.html#method-i-event","()","<p>rederict if candidate not signed_in.\n"],["event","RegistrationsController","RegistrationsController.html#method-i-event","()",""],["event_class","ApplicationController","ApplicationController.html#method-i-event_class","(candidate_event)","<p>map  from candidate_event status to css class it should match\ncandidate_event.status\n<p>Parameters:\n<p><code>:candidate_event</code> …\n"],["event_columns","ExportListsController","ExportListsController.html#method-c-event_columns","()",""],["event_name","BaptismalCertificate","BaptismalCertificate.html#method-c-event_name","()","<p>associated confirmation event name\n<p>Returns:\n<p><code>String</code>\n"],["event_name","CandidateSheet","CandidateSheet.html#method-c-event_name","()","<p>associated confirmation event name\n<p>Returns:\n<p><code>String</code>\n"],["event_name","ChristianMinistry","ChristianMinistry.html#method-c-event_name","()","<p>associated confirmation event name\n<p>Returns:\n<p><code>String</code>\n"],["event_name","PickConfirmationName","PickConfirmationName.html#method-c-event_name","()","<p>associated confirmation event name\n<p>Returns:\n<p><code>String</code>\n"],["event_name","RetreatVerification","RetreatVerification.html#method-c-event_name","()","<p>associated confirmation event name\n<p>Returns:\n<p>String\n"],["event_name","SponsorCovenant","SponsorCovenant.html#method-c-event_name","()","<p>associated confirmation event name\n<p>Returns:\n<p><code>String</code>\n"],["event_name_to_path","SortingCandListHelpers","SortingCandListHelpers.html#method-i-event_name_to_path","(event_name, candidate_id)",""],["event_name_to_path_verify","SortingCandListHelpers","SortingCandListHelpers.html#method-i-event_name_to_path_verify","(event_name, candidate_id)",""],["event_values","ExportListsController","ExportListsController.html#method-c-event_values","()",""],["event_with_picture","CommonCandidatesController","CommonCandidatesController.html#method-i-event_with_picture","()","<p>edit event_with_picture\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["event_with_picture_image","CommonCandidatesController","CommonCandidatesController.html#method-i-event_with_picture_image","()","<p>send_image of event_with_picture\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["event_with_picture_setup","Object","Object.html#method-i-event_with_picture_setup","(route, is_verify = false)",""],["event_with_picture_update","CommonCandidatesController","CommonCandidatesController.html#method-i-event_with_picture_update","()","<p>update event_with_picture\n<p>Attributes:\n<p><code>:commit</code> legal values\n"],["event_with_picture_verify","CommonCandidatesController","CommonCandidatesController.html#method-i-event_with_picture_verify","()","<p>edit event_with_picture verify\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["event_with_picture_verify_update","CommonCandidatesController","CommonCandidatesController.html#method-i-event_with_picture_verify_update","()","<p>update event_with_picture verify event\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["events","ExportListsController","ExportListsController.html#method-i-events","()","<p>downloads spreadsheet for event status per candidate\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["events_external_verification","Candidate","Candidate.html#method-c-events_external_verification","()","<p>candidate events needs admin verification\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["expand_text","SendGridMail","SendGridMail.html#method-i-expand_text","(candidate, subject_mail_part, body_input_mail_part, delivery_call)","<p>Expand the email text making any necessary substitutions.\n<p>Parameters:\n<p><code>:candidate</code> The candidate\n"],["expand_text_ci","SendGridMail","SendGridMail.html#method-i-expand_text_ci","(candidate)","<p>TEST ONLY expand text\n<p>Parameters:\n<p><code>:candidate</code> Candidate\n"],["expand_text_rp","SendGridMail","SendGridMail.html#method-i-expand_text_rp","(candidate)","<p>TEST ONLY expand text\n<p>Parameters:\n<p><code>:candidate</code> Candidate\n"],["expanded_text","SendGridMailSpec","SendGridMailSpec.html#method-i-expanded_text","()",""],["expect_account_confirmed","ViewsHelpers","ViewsHelpers.html#method-i-expect_account_confirmed","()",""],["expect_adhoc_mailing_html","Object","Object.html#method-i-expect_adhoc_mailing_html","(candidates)",""],["expect_admin","Object","Object.html#method-i-expect_admin","(admin)",""],["expect_baptismal_certificate_form","Object","Object.html#method-i-expect_baptismal_certificate_form","(cand_id, dev_path, path_str, button_name, is_verify, hide_first_comm, hide_baptismal_certificate, dont_show_values, values = { birth_date: dont_show_values ? nil : BIRTH_DATE, baptismal_date: dont_show_values ? nil : BAPTISMAL_DATE, church_name: dont_show_values ? nil : CHURCH_NAME, street_1: dont_show_values ? nil : STREET_1, street_2: dont_show_values ? nil : STREET_2, city: dont_show_values ? nil : CITY, state: dont_show_values ? nil : STATE, zip_code: dont_show_values ? nil : ZIP_CODE, father_first: dont_show_values ? nil : FATHER_FIRST, father_middle: dont_show_values ? nil : FATHER_MIDDLE, father_last: dont_show_values ? nil : LAST_NAME, mother_first: dont_show_values ? nil : MOTHER_FIRST, mother_middle: dont_show_values ? nil : MOTHER_MIDDLE, mother_maiden: dont_show_values ? nil : MOTHER_MAIDEN, mother_last: dont_show_values ? nil : LAST_NAME, first_name: dont_show_values ? nil : FIRST_NAME, middle_name: dont_show_values ? nil : MIDDLE_NAME, last_name: dont_show_values ? nil : LAST_NAME })",""],["expect_basic_admin_info","Object","Object.html#method-i-expect_basic_admin_info","(body, subject)",""],["expect_basic_candidate_info","Object","Object.html#method-i-expect_basic_candidate_info","(body, candidate)",""],["expect_cand_account_confirmation","Object","Object.html#method-i-expect_cand_account_confirmation","(cand_id, values = {})",""],["expect_candidate","Object","Object.html#method-i-expect_candidate","(values)",""],["expect_candidate_event","Object","Object.html#method-i-expect_candidate_event","(candidate, completed_date, verified)",""],["expect_candidate_note_form","Object","Object.html#method-i-expect_candidate_note_form","(cand_id, path_str, update_id, values = {})",""],["expect_candidate_sheet_form","Object","Object.html#method-i-expect_candidate_sheet_form","(cand_id, path_str, dev_path, update_id, is_verify, values = {})",""],["expect_candidates","Object","Object.html#method-i-expect_candidates","(wks, candidate_import)",""],["expect_candidates_empty","Object","Object.html#method-i-expect_candidates_empty","(wks, candidate_import)",""],["expect_christian_ministry_form","SortingCandListHelpers","SortingCandListHelpers.html#method-i-expect_christian_ministry_form","(cand_id, path_str, dev_path, update_id, is_verify, values = {})",""],["expect_closing","Object","Object.html#method-i-expect_closing","(body)",""],["expect_column_sorting","Object","Object.html#method-i-expect_column_sorting","(column, *candidates)",""],["expect_common","Object","Object.html#method-i-expect_common","(admin_logged_in)",""],["expect_confirmation_event","Object","Object.html#method-i-expect_confirmation_event","(confirmation_event, events_size, instructions, the_way_due_date = '2016-05-31', chs_due_date = '2016-05-24', name = 'Going out to eat')",""],["expect_confirmation_events","Object","Object.html#method-i-expect_confirmation_events","(is_chs)",""],["expect_confirmation_events_empty","Object","Object.html#method-i-expect_confirmation_events_empty","(wks, candidate_import)",""],["expect_create_candidate","ViewsHelpers","ViewsHelpers.html#method-i-expect_create_candidate","(rendered_or_page)",""],["expect_db","ViewsHelpers","ViewsHelpers.html#method-i-expect_db","(candidate_size, conf_event_size, image_size)",""],["expect_download_button","Object","Object.html#method-i-expect_download_button","(name, cand_id, dev_path)",""],["expect_edit_and_new_view","ViewsHelpers","ViewsHelpers.html#method-i-expect_edit_and_new_view","(rendered_or_page, candidate, action, submit_button, is_candidate_signed_in, is_new)",""],["expect_event","SortingCandListHelpers","SortingCandListHelpers.html#method-i-expect_event","(event_name, verify = false)",""],["expect_event_association","Object","Object.html#method-i-expect_event_association","(assoc_from_candidate, size)",""],["expect_event_association_local","Object","Object.html#method-i-expect_event_association_local","(assoc_from_candidate)",""],["expect_external_verification","Object","Object.html#method-i-expect_external_verification","(actual, external, to_be_verified, verified, not_complete)",""],["expect_field","Object","Object.html#method-i-expect_field","(label, value)",""],["expect_form","Object","Object.html#method-i-expect_form","()",""],["expect_heading","Object","Object.html#method-i-expect_heading","(cand, event_name)",""],["expect_heading","SortingCandListHelpers","SortingCandListHelpers.html#method-i-expect_heading","(cand, is_dev, event_name)",""],["expect_image_upload","Object","Object.html#method-i-expect_image_upload","(key, picture_column, label)",""],["expect_image_values","Object","Object.html#method-i-expect_image_values","(candidate, image_column_mapping_key, image_filename)",""],["expect_import_with_events","Object","Object.html#method-i-expect_import_with_events","()",""],["expect_initial_conf_events","Object","Object.html#method-i-expect_initial_conf_events","()",""],["expect_keys","Object","Object.html#method-i-expect_keys","(obj, attributes)",""],["expect_links_in_order","Object","Object.html#method-i-expect_links_in_order","(link_names_in_order, sidebar_id, dev, li_offset, candidate_id = '')",""],["expect_mail_attadchment_upload","Object","Object.html#method-i-expect_mail_attadchment_upload","()",""],["expect_mailer_text","Object","Object.html#method-i-expect_mailer_text","(candidate, candidates_mailer_text)",""],["expect_mass_edit_candidates_event","SortingCandListHelpers","SortingCandListHelpers.html#method-i-expect_mass_edit_candidates_event","(confirmation_event, cand_id, updated_message, is_unverified = false)",""],["expect_mass_mailing_html","ViewsHelpers","ViewsHelpers.html#method-i-expect_mass_mailing_html","(candidates, rendered_or_page_or_page)",""],["expect_message","Object","Object.html#method-i-expect_message","(id, message)",""],["expect_messages","Object","Object.html#method-i-expect_messages","(messages, rendered_page = page)",""],["expect_monthly_mass_mailing_form","Object","Object.html#method-i-expect_monthly_mass_mailing_form","(values = {})",""],["expect_no_orphaned_associations","Object","Object.html#method-i-expect_no_orphaned_associations","()",""],["expect_offenses","Object","Object.html#method-i-expect_offenses","(file, *expected_offenses)",""],["expect_ophans","Object","Object.html#method-i-expect_ophans","(candidate_import, orphans)",""],["expect_password_changed","ViewsHelpers","ViewsHelpers.html#method-i-expect_password_changed","()",""],["expect_pick_confirmation_name_form","SortingCandListHelpers","SortingCandListHelpers.html#method-i-expect_pick_confirmation_name_form","(cand_id, path_str, dev_path, update_id, is_verify, values = {})",""],["expect_remove_button","Object","Object.html#method-i-expect_remove_button","(hidden_id, field)",""],["expect_retreat_verification_form","Object","Object.html#method-i-expect_retreat_verification_form","(cand_id, dev_path, path_str, is_verify, values = { who_held_retreat: WHO_HELD_RETREAT, where_held_retreat: WHERE_HELD_RETREAT, start_date: START_DATE, end_date: END_DATE })",""],["expect_select_checkbox","SortingCandListHelpers","SortingCandListHelpers.html#method-i-expect_select_checkbox","()",""],["expect_send_data","Object","Object.html#method-i-expect_send_data","(external, to_be_verified, verified, not_complete, pre_title, filename, route, extra_columns = [], functs = [])",""],["expect_show_visitor","Object","Object.html#method-i-expect_show_visitor","(home, about, contact, expected_messages = [])",""],["expect_signed_agreement_form","Object","Object.html#method-i-expect_signed_agreement_form","(cand_id, dev_path, is_agreement_signed, form_action, field_name, documant_key, event_name, update_id, is_verify, values = {})",""],["expect_sorting_candidate_list","SortingCandListHelpers","SortingCandListHelpers.html#method-i-expect_sorting_candidate_list","(column_headers_in_order, candidates_in_order, rendered_or_page, confirmation_event = nil)",""],["expect_sponsor_covenant_form","Object","Object.html#method-i-expect_sponsor_covenant_form","(cand_id, dev_path, path_str, is_verify, values = { sponsor_name: SPONSOR_NAME })",""],["expect_table","Object","Object.html#method-i-expect_table","(body, _field_id, field_text, event_prefix, column_headers, cell_values)",""],["expect_table_rows","Object","Object.html#method-i-expect_table_rows","(clazz, expected_sizes, checked = [], do_not_include = [Admin])",""],["expect_view","Object","Object.html#method-i-expect_view","(body, late_values, coming_due_values, completed_awaiting_values, completed_values)",""],["expected_orphans","Object","Object.html#method-i-expected_orphans","()",""],["expected_value_function","Object","Object.html#method-i-expected_value_function","(status_name)",""],["export_to_excel","CandidateImportsController","CandidateImportsController.html#method-i-export_to_excel","()","<p>export whole database to excel.  Optionally, don&#39;t include scanned\npictures\n<p>Attributes:\n<p><code>:commit</code> legal …\n"],["export_to_excel_no_pictures","ExportExcelJob","ExportExcelJob.html#method-i-export_to_excel_no_pictures","(dir, admin)","<p>send excel spreadsheet to admin of the database without scanned in pictures\n<p>Parameters:\n<p><code>:dir</code> temp directory …\n"],["export_to_excel_no_pictures","ExportExcelJobSpec","ExportExcelJobSpec.html#method-i-export_to_excel_no_pictures","(dir, admin)",""],["export_to_excel_no_pictures_message","SendGridMail","SendGridMail.html#method-i-export_to_excel_no_pictures_message","(attach_file_path)","<p>Send the attach_file to admin.\n<p>Parameters:\n<p><code>:attach_file_path</code> The excel spread sheet\n"],["export_to_excel_pictures_message","SendGridMail","SendGridMail.html#method-i-export_to_excel_pictures_message","(attach_file_path)","<p>Expand the email text making any necessary substitutions.\n<p>Parameters:\n<p><code>:attach_file_path</code> The path to the …\n"],["external_verification","Candidate","Candidate.html#method-c-external_verification","(candidate_event_name, external_verification = ->(_candidate) { false }",""],["fill_in_cand","Object","Object.html#method-i-fill_in_cand","(cand)",""],["fill_in_form","Object","Object.html#method-i-fill_in_form","(attach_file = true)",""],["find_cell_offset","Object","Object.html#method-i-find_cell_offset","(header_row, column_name)",""],["find_first_by_auth_conditions","Candidate","Candidate.html#method-c-find_first_by_auth_conditions","(tainted_conditions, options = {})","<p>???\n<p>Returns:\n<p><code>Array</code> of conditions\n"],["first_comm_at_stmm_show_no","BaptismalCertificate","BaptismalCertificate.html#method-i-first_comm_at_stmm_show_no","()","<p>Whether to show first communion as no\n<p>Returns:\n<p><code>Boolean</code>\n"],["first_comm_at_stmm_show_yes","BaptismalCertificate","BaptismalCertificate.html#method-i-first_comm_at_stmm_show_yes","()","<p>Whether to show first communion as yes\n<p>Returns:\n<p><code>Boolean</code>\n"],["first_comm_show","BaptismalCertificate","BaptismalCertificate.html#method-i-first_comm_show","()","<p>Whether to show first communion info\n<p>Returns:\n<p><code>Boolean</code>\n"],["first_comment?","MethodDocRange","MethodDocRange.html#method-i-first_comment-3F","()",""],["first_comment_equal?","MethodDocRange","MethodDocRange.html#method-i-first_comment_equal-3F","(text)",""],["first_empty_comment?","MethodDocRange","MethodDocRange.html#method-i-first_empty_comment-3F","()",""],["first_name","PluckCan","PluckCan.html#method-i-first_name","()","<p>first_name\n<p>Returns:\n<p><code>String</code>\n"],["first_param_and_arg_name","ParmNameDoesNotMatchArgumentNameController","ParmNameDoesNotMatchArgumentNameController.html#method-i-first_param_and_arg_name","(arg1, same)","<p>First Parameter does not match first argument\n<p>Parameters:\n<p><code>:parm1</code> First Parameter\n"],["foo_bar","Object","Object.html#method-i-foo_bar","()",""],["generate_seed","AppFactory","AppFactory.html#method-c-generate_seed","()","<p>create or find the Admin - reseting password.  Then create the seed\n"],["get_candidate_event","Candidate","Candidate.html#method-i-get_candidate_event","(event_name)","<p>returns candidate_event whose name is event_name\n<p>Parameters:\n<p><code>:event_name</code> owner of association\n"],["get_column_value","ExportExcelCandJob","ExportExcelCandJob.html#method-i-get_column_value","(candidate, col, confirmation_events)","<p>get value to put in cell\n<p>Parameters:\n<p><code>:candidate</code> Candidate:\n"],["get_event_association","Candidate","Candidate.html#method-i-get_event_association","(event_route_name)","<p>returns the association based on event name\n<p>Parameters:\n<p><code>:event_route_name</code> event name\n"],["grade","PluckCan","PluckCan.html#method-i-grade","()","<p>grade\n<p>Returns:\n<p><code>Integer</code>\n"],["grid_address","CandidatePDFDocument","CandidatePDFDocument.html#method-i-grid_address","(cell, label_base, address_association)","<p>Generate address for page\n<p>Parameters:\n<p><code>:cell</code> beginning cell\n"],["grid_label","CandidatePDFDocument","CandidatePDFDocument.html#method-i-grid_label","(cell, cell2, label)","<p>Generate label for a cell\n<p>Parameters:\n<p><code>:cell</code> start point\n"],["grid_label_value","CandidatePDFDocument","CandidatePDFDocument.html#method-i-grid_label_value","(cell, label, value)","<p>Generate label-value for a cell\n<p>Parameters:\n<p><code>:cell</code> cell\n"],["grid_label_value2","CandidatePDFDocument","CandidatePDFDocument.html#method-i-grid_label_value2","(cell, label, value)","<p>Generate label-value for a cell for cell width 2\n<p>Parameters:\n<p><code>:cell</code> cell\n"],["grid_value","CandidatePDFDocument","CandidatePDFDocument.html#method-i-grid_value","(cell, cell2, value)","<p>Generate value for a cell\n<p>Parameters:\n<p><code>:cell</code> start point\n"],["handle_error","RuboCop::Cop::Team","RuboCop/Cop/Team.html#method-i-handle_error","(error, location, cop)","<p>This is a copy of handle_error in rubocop/cop/team.rb except it raises the\nerror so my tests of my extension …\n"],["headers_for","CustomDeviseMailer","CustomDeviseMailer.html#method-i-headers_for","(action, opts)","<p>set up email addresses in header\n<p>Parameters:\n<p><code>:action</code> legal values\n"],["i18n_label","MailPart","MailPart.html#method-i-i18n_label","()","<p>I18n lookup key.\n<p>Returns:\n<p><code>:String</code>\n"],["id","PluckCan","PluckCan.html#method-i-id","()","<p>id\n<p>Returns:\n<p><code>String</code>\n"],["ids","CandidateImport","CandidateImport.html#method-i-ids","(clazz)","<p>get &amp; cache ids of clazz\n<p>Parameters:\n<p><code>:clazz</code> Class: class of interest\n"],["illegal_parameters_syntax","ParametersController","ParametersController.html#method-i-illegal_parameters_syntax","(arg1)","<p>Illegal Parameters syntax ***ERROR\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["illegal_returns_syntax","ReturnsController","ReturnsController.html#method-i-illegal_returns_syntax","()","<p>Illegal Returns syntax ***ERROR\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["illegal_sub_attributes","AttributesController","AttributesController.html#method-i-illegal_sub_attributes","()","<p>illegal sub-line tt instead of code ***ERROR\n<p>Attributes:\n<p><code>:arg1</code> Legal Values\n"],["illegal_sub_format_returns","ReturnsController","ReturnsController.html#method-i-illegal_sub_format_returns","()","<p>Illegal sub-format ***ERROR\n<p>Returns:\n<p><code>String</code> for spreadsheet\n"],["illegal_unused_argument","ParmNameDoesNotMatchArgumentNameController","ParmNameDoesNotMatchArgumentNameController.html#method-i-illegal_unused_argument","(same, _arg2)","<p>Illegal unused argument\n<p>Parameters:\n<p><code>:same</code> First Parameter\n"],["image_column_value","Object","Object.html#method-i-image_column_value","(candidate, columns)",""],["image_columns","CandidateImport","CandidateImport.html#method-c-image_columns","()",""],["image_filename_import","CandidateImport","CandidateImport.html#method-c-image_filename_import","(file_path)","<p>File for importing\n<p>Parameters:\n<p><code>:file_path</code> String: filepath for importing\n"],["image_filepath_export","CandidateImport","CandidateImport.html#method-c-image_filepath_export","(candidate, dir, image_column, image)","<p>filepath for exporting\n<p>Parameters:\n<p><code>:candidate</code> Candidate: being exported\n"],["img_src_selector","Object","Object.html#method-i-img_src_selector","()",""],["import_candidates","CandidateImportsController","CandidateImportsController.html#method-i-import_candidates","()","<p>load in an zip file which is an excel spreadsheet with pictures or an\ninitial file which is the initial …\n"],["index","AdminsController","AdminsController.html#method-i-index","()","<p>list all admins\n"],["index","CandidatesController","CandidatesController.html#method-i-index","()","<p>show candidates\n"],["index","Dev::CandidatesController","Dev/CandidatesController.html#method-i-index","()","<p>Should never be called\n"],["index","VisitorsController","VisitorsController.html#method-i-index","()","<p>redirect to appropriate routing depending who is logged in.\n"],["info_show","BaptismalCertificate","BaptismalCertificate.html#method-i-info_show","()","<p>Whether to show info\n<p>Returns:\n<p><code>Boolean</code>\n"],["inialize","ExportExcelJobSpec","ExportExcelJobSpec.html#method-i-inialize","()",""],["keep_bc_errors","Candidate","Candidate.html#method-i-keep_bc_errors","()","<p>keep only first, middle, and last names error messages\n"],["last_name","PluckCan","PluckCan.html#method-i-last_name","()","<p>last_name\n<p>Returns:\n<p><code>String</code>\n"],["late?","CandidateEvent","CandidateEvent.html#method-i-late-3F","()","<p>Is the candidate event past due.\n<p>Returns:\n<p><code>Boolean</code>\n"],["late?","CandidateEvent","CandidateEvent.html#method-c-late-3F","(due_date, completed_date)","<p>Is the candidate event past due.\n<p>Parameters:\n<p><code>:due_date</code> Date: The due_date -if nil then not started.\n"],["late_events","Candidate","Candidate.html#method-i-late_events","()","<p>returns array of late events\n<p>Returns:\n<p><code>Array</code> of late candidate events\n"],["legal_attributes","AttributesController","AttributesController.html#method-i-legal_attributes","()","<p>Legal use of attributes\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["legal_description_with_parameters_and_returns","DescriptionsController","DescriptionsController.html#method-i-legal_description_with_parameters_and_returns","(arg1)","<p>Should not generate any offenses\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["legal_description_with_returns","DescriptionsController","DescriptionsController.html#method-i-legal_description_with_returns","()","<p>Should not generate any offenses\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["legal_descriptions","DescriptionsController","DescriptionsController.html#method-i-legal_descriptions","(arg1)","<p>Should not generate any offenses\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["legal_emails","SendGridMail","SendGridMail.html#method-i-legal_emails","()","<p>legal emails for non-production\n<p>Returns:\n<p><code>Array</code> of legal emails for non-production\n"],["legal_multiple_returns_syntax","ReturnsController","ReturnsController.html#method-i-legal_multiple_returns_syntax","()","<p>legal multiple returns\n<p>Returns:\n<p><code>Boolen</code>\n"],["legal_no_args","DescriptionsController","DescriptionsController.html#method-i-legal_no_args","()","<p>Should not generate any offenses\n"],["legal_parameters_syntax","ParametersController","ParametersController.html#method-i-legal_parameters_syntax","(arg1)","<p>legal parameters\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["legal_returns_syntax","ReturnsController","ReturnsController.html#method-i-legal_returns_syntax","()","<p>legal returns\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["legal_sub_attributes","AttributesController","AttributesController.html#method-i-legal_sub_attributes","()","<p>legal sub-lines\n<p>Attributes:\n<p><code>:arg1</code> Legal Values - legal\n"],["legal_sub_parameters","ParametersController","ParametersController.html#method-i-legal_sub_parameters","(arg1)","<p>legal sub-lines ***ERROR\n<p>Parameters:\n<p><code>:arg1</code> Legal Values\n"],["legal_sub_values","ReturnsController","ReturnsController.html#method-i-legal_sub_values","()","<p>legal multiple returns\n<p>Returns:\n<p><code>String</code> legal values\n"],["load_initial_file","CandidateImport","CandidateImport.html#method-i-load_initial_file","(file)","<p>Load an excel file with initial list of candidates.  It can be loaded in\nmultiple times\n<p>Parameters:\n<p><code>:file</code> …\n"],["login_admin","ControllerMacros","ControllerMacros.html#method-i-login_admin","()",""],["login_candidate","ControllerMacros","ControllerMacros.html#method-i-login_candidate","()",""],["make_valid_bc","Object","Object.html#method-i-make_valid_bc","(candidate)",""],["make_valid_rv","Object","Object.html#method-i-make_valid_rv","(candidate)",""],["make_valid_sc","Object","Object.html#method-i-make_valid_sc","(candidate)",""],["make_valid_sc_eligibility","Object","Object.html#method-i-make_valid_sc_eligibility","(candidate)",""],["mark_completed","CandidateEvent","CandidateEvent.html#method-i-mark_completed","(validated, cand_assoc_class)","<p>Mark candidated complete by setting the completed date Some associations\ncan be automatically makred …\n"],["mass_edit_candidates_event","AdminsController","AdminsController.html#method-i-mass_edit_candidates_event","()","<p>edit mass candidate events\n<p>Attributes:\n<p><code>:id</code> ConfirmationEvent id\n"],["mass_edit_candidates_event_update","AdminsController","AdminsController.html#method-i-mass_edit_candidates_event_update","()","<p>updating mass candidate events\n<p>Attributes:\n<p><code>:id</code> ConfirmationEvent id\n"],["mass_edit_candidates_update","AdminsController","AdminsController.html#method-i-mass_edit_candidates_update","()","<p>updating mass edit candidates\n<p>Attributes:\n<p><code>:candidate</code> holder of\n"],["missing?","MethodDocRange","MethodDocRange.html#method-i-missing-3F","()",""],["missing_blank_comment_attributes_first","AttributesController","AttributesController.html#method-i-missing_blank_comment_attributes_first","()","<p>Missing blank comment first\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["missing_blank_comment_attributes_last","AttributesController","AttributesController.html#method-i-missing_blank_comment_attributes_last","()","<p>Missing blank comment\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["missing_blank_comment_parameters_no_parameters","ParametersController","ParametersController.html#method-i-missing_blank_comment_parameters_no_parameters","(arg1)","<p>Parameters should end with a blank comment ***ERROR\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["missing_blank_comment_returns_no_parameters","ReturnsController","ReturnsController.html#method-i-missing_blank_comment_returns_no_parameters","()","<p>Returns should end with a blank comment ***ERROR\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["missing_body_parameters","ParametersController","ParametersController.html#method-i-missing_body_parameters","(arg1)","<p>Missing body ***ERROR\n<p>Parameters:\n"],["missing_description_with_returns","DescriptionsController","DescriptionsController.html#method-i-missing_description_with_returns","()","<p>Returns:\n<p><code>send_data</code> for spreadsheet\n\n<p>Description should be first ***ERROR\n"],["missing_descriptions","DescriptionsController","DescriptionsController.html#method-i-missing_descriptions","(arg1)","<p>Parameters:\n<p><code>:arg1</code> First Parameter\n\n<p>Description should be first ***ERROR\n"],["missing_first_blank_comment_parameters","ParametersController","ParametersController.html#method-i-missing_first_blank_comment_parameters","(arg1)","<p>Missing first blank company ***ERROR\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["missing_first_blank_comment_returns","ReturnsController","ReturnsController.html#method-i-missing_first_blank_comment_returns","()","<p>Missing final blank company ***ERROR\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["monthly_mass_mailing","AdminsController","AdminsController.html#method-i-monthly_mass_mailing","()","<p>updating and sending monthly mass mailing\n<p>Attributes:\n<p><code>:mail</code> holder of\n"],["monthly_mass_mailing","SendGridMail","SendGridMail.html#method-i-monthly_mass_mailing","(subject_mail_part, attach_file, *body_input_mail_part)","<p>Generate and send monthly reminder email\n<p>Parameters:\n<p><code>:subject_mail_part</code> The subject of the email put in …\n"],["monthly_mass_mailing_test","SendGridMail","SendGridMail.html#method-i-monthly_mass_mailing_test","(subject_mail_part, attach_file, *body_input_mail_part)","<p>Generate and send monthly reminder test email\n<p>Parameters:\n<p><code>:subject_mail_part</code> The subject of the email put …\n"],["monthly_mass_mailing_update","AdminsController","AdminsController.html#method-i-monthly_mass_mailing_update","()","<p>prepare for monthly mass mailing\n<p>Attributes:\n<p><code>:subject</code>  subject of message\n"],["monthly_reminder","CandidatesMailer","CandidatesMailer.html#method-i-monthly_reminder","(_admin, candidate_mailer_text)","<p>generate email body for reminder message - indicating what candidate events\nare completed, late, &amp; …\n"],["monthly_reminder_test","CandidatesMailer","CandidatesMailer.html#method-i-monthly_reminder_test","(admin, candidate_mailer_text)","<p>generate email body for reminder message - sent to admin indicating what\ncandidate events are completed, …\n"],["new","CandidateImport","CandidateImport.html#method-c-new","(attributes = {})","<p>initialize new instance\n<p>Parameters:\n<p><code>:attributes</code> name vaue pairs\n"],["new","CandidateImportsController","CandidateImportsController.html#method-i-new","()","<p>new candidate import\n"],["new","CandidatePDFDocument","CandidatePDFDocument.html#method-c-new","(candidate)","<p>Instantiation\n<p>Parameters:\n<p><code>:candidate</code> number of columns\n"],["new","CandidatesController","CandidatesController.html#method-i-new","()","<p>create new Candidate\n"],["new","CandidatesMailerText","CandidatesMailerText.html#method-c-new","(parms)","<p>Instantiation\n<p>Parameters:\n<p><code>:parms</code>\n"],["new","Dev::RegistrationsController","Dev/RegistrationsController.html#method-i-new","()","<p>candidate cannot new a candidate\n"],["new","DummyGoodResponse","DummyGoodResponse.html#method-c-new","()",""],["new","EventCompleteValidator","EventCompleteValidator.html#method-c-new","(association, validate_others = false)","<p>Instantiation\n<p>Parameters:\n<p><code>:association</code>\n"],["new","ExportExcelCandJob","ExportExcelCandJob.html#method-c-new","()","<p>object creation\n"],["new","MailPart","MailPart.html#method-c-new","(name, text, show = true)","<p>Instantiation\n<p>Parameters:\n<p><code>:name</code> field id for tag\n"],["new","MethodDocRange","MethodDocRange.html#method-c-new","(comments, type)",""],["new","OfflineResponse","OfflineResponse.html#method-c-new","()",""],["new","PluckCan","PluckCan.html#method-c-new","(cand_info, cand_event_info, candidate_event = nil)","<p>instantiation\n<p>Parameters:\n<p><code>:cand_info</code> Candidate information shown in the sorting table.\n"],["new","RegistrationsController","RegistrationsController.html#method-i-new","()","<p>new Candidate\n"],["new","SendGridMail","SendGridMail.html#method-c-new","(admin, candidates)","<p>Instantiation\n<p>Parameters:\n<p><code>:admin</code> from\n"],["new","SendGridMailSpec","SendGridMailSpec.html#method-c-new","(admin, candidates, _options = {})",""],["new_body","MailPart","MailPart.html#method-c-new_body","(text, show = true)","<p>Instantiation for subject\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_closing_input","MailPart","MailPart.html#method-c-new_closing_input","(text, show = true)","<p>Instantiation for closing_input\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_completed_awaiting_input","MailPart","MailPart.html#method-c-new_completed_awaiting_input","(text, show = true)","<p>Instantiation for completed_awaiting_input\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_completed_input","MailPart","MailPart.html#method-c-new_completed_input","(text, show = true)","<p>Instantiation for completed_input\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_from_input","MailPart","MailPart.html#method-c-new_from_input","(text, show = true)","<p>Instantiation for from_input\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_pre_coming_due_input","MailPart","MailPart.html#method-c-new_pre_coming_due_input","(text, show = true)","<p>Instantiation for pre_coming_due_input\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_pre_late_input","MailPart","MailPart.html#method-c-new_pre_late_input","(text, show = true)","<p>Instantiation for pre_late_input\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_salutation_input","MailPart","MailPart.html#method-c-new_salutation_input","(text, show = true)","<p>Instantiation for salutation_input\n<p>Parameters:\n<p><code>:text</code> field value\n"],["new_subject","MailPart","MailPart.html#method-c-new_subject","(text, show = true)","<p>Instantiation for subject\n<p>Parameters:\n<p><code>:text</code> field value\n"],["no_args","NoArgsController","NoArgsController.html#method-i-no_args","()","<p>Legal no argument method\n"],["no_args_with_returns","NoArgsController","NoArgsController.html#method-i-no_args_with_returns","()","<p>Legal no arguments with Returns\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["no_attributes_body","AttributesController","AttributesController.html#method-i-no_attributes_body","()","<p>No attributes body ***Error\n<p>Attributes:\n"],["no_comment","NoCommentController","NoCommentController.html#method-i-no_comment","()",""],["not_attends_stmm_params","SponsorCovenant","SponsorCovenant.html#method-c-not_attends_stmm_params","()","<p>Editable attributes when sponsor does NOT belongs to stmm\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["offenses","Object","Object.html#method-i-offenses","(output)",""],["on_def","RuboCop::Cop::Style::PublicMethodDocumentation","RuboCop/Cop/Style/PublicMethodDocumentation.html#method-i-on_def","(node)","<p>def_node_matcher :constant_definition?, &#39;{class module}&#39;\ndef_node_search :outer_module, &#39;(const …\n"],["orphaned_addresses","CandidateImport","CandidateImport.html#method-i-orphaned_addresses","()","<p>Finds all the Address&#39;s that have been orphaned.\n"],["orphaned_baptismal_certificates","CandidateImport","CandidateImport.html#method-i-orphaned_baptismal_certificates","(used_cand_ids)","<p>Finds all the BaptismalCertificate&#39;s that have been orphaned.\n<p>Parameters:\n<p><code>:used_cand_ids</code> Array:\n"],["orphaned_candidate_sheets","CandidateImport","CandidateImport.html#method-i-orphaned_candidate_sheets","(cand_ids)","<p>Finds all the CandidateSheet&#39;s that have been orphaned.\n<p>Parameters:\n<p><code>:cand_ids</code> Array:\n"],["orphaned_christian_ministry","CandidateImport","CandidateImport.html#method-i-orphaned_christian_ministry","(cand_ids)","<p>Finds all the ChristianMinistry&#39;s that have been orphaned.\n<p>Parameters:\n<p><code>:cand_ids</code> Array:\n"],["orphaned_ids","CandidateImport","CandidateImport.html#method-i-orphaned_ids","(clazz, used_ids, offset = nil)","<p>Orphaned ids for clazz\n<p>Parameters:\n<p><code>:clazz</code> Class: class of interest\n"],["orphaned_pick_name","CandidateImport","CandidateImport.html#method-i-orphaned_pick_name","(cand_ids)","<p>Finds all the PickConfirmationName&#39;s that have been orphaned.\n<p>Parameters:\n<p><code>:cand_ids</code> Array:\n"],["orphaned_retreat_verification","CandidateImport","CandidateImport.html#method-i-orphaned_retreat_verification","(cand_ids)","<p>Finds all the RetreatVerification&#39;s that have been orphaned.\n<p>Parameters:\n<p><code>:cand_ids</code> Array:\n"],["orphaned_scanned_image","CandidateImport","CandidateImport.html#method-i-orphaned_scanned_image","()","<p>Finds all the ScannedImage&#39;s that have been orphaned.\n"],["orphaned_sponsor_covenant","CandidateImport","CandidateImport.html#method-i-orphaned_sponsor_covenant","(cand_ids)","<p>Finds all the SponsorCovenant&#39;s that have been orphaned.\n<p>Parameters:\n<p><code>:cand_ids</code> Array:\n"],["orphaned_table_rows","CandidateImportsController","CandidateImportsController.html#method-i-orphaned_table_rows","()","<p>find orphaned table rows – table rows with foriegn key ids in other tables\nbut other tables do not refernce …\n"],["orphaned_to_do","CandidateImport","CandidateImport.html#method-i-orphaned_to_do","()","<p>Finds all the ScannedImage&#39;s that have been orphaned.\n"],["page_header","CandidatePDFDocument","CandidatePDFDocument.html#method-i-page_header","(header_text, cell1, cell2)","<p>Generate page header\n<p>Parameters:\n<p><code>:header_text</code> text for header\n"],["param_and_arg_name","ParmNameDoesNotMatchArgumentNameController","ParmNameDoesNotMatchArgumentNameController.html#method-i-param_and_arg_name","(arg1)","<p>Parameter does not match arg\n<p>Parameters:\n<p><code>:parm1</code> First Parameter\n"],["param_and_arg_name_good","ParmNameDoesNotMatchArgumentNameController","ParmNameDoesNotMatchArgumentNameController.html#method-i-param_and_arg_name_good","(arg1)","<p>legal\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["param_and_arg_name_order","ParmNameDoesNotMatchArgumentNameController","ParmNameDoesNotMatchArgumentNameController.html#method-i-param_and_arg_name_order","(arg1, arg2)","<p>legal\n<p>Parameters:\n<p><code>:arg2</code> First Parameter\n"],["params_greater_than_args","ParamsGreaterThanArgsController","ParamsGreaterThanArgsController.html#method-i-params_greater_than_args","(arg1)","<p>This will raise one offense that the documented parm size does not match\nthe number of arguments specified. …\n"],["params_greater_than_args_name_mismatch","ParamsGreaterThanArgsController","ParamsGreaterThanArgsController.html#method-i-params_greater_than_args_name_mismatch","(arg1)","<p>This should raise two offenses\n\n<pre>- There are more parms documented than there are args specified.\n- The ...</pre>\n"],["params_less_than_args","ParamsLessThanArgsController","ParamsLessThanArgsController.html#method-i-params_less_than_args","(arg1, arg2)","<p>should generate offense that Paremetes is less than arguments\n<p>Parameters:\n<p><code>:arg1</code> First Parameter\n"],["params_less_than_args_2","ParamsLessThanArgsController","ParamsLessThanArgsController.html#method-i-params_less_than_args_2","(arg1, arg2)","<p>should generate offense\n\n<pre>- Paremeters is less than arguments\n- Parm1 does not match arg1</pre>\n<p>Parameters:\n"],["parm_names","MethodDocRange","MethodDocRange.html#method-i-parm_names","()",""],["password_changed","PluckCan","PluckCan.html#method-i-password_changed","()","<p>password_changed\n<p>Returns:\n<p><code>Boolean</code>\n"],["password_changed?","Candidate","Candidate.html#method-i-password_changed-3F","()","<p>whether the password has been changed - allows admin to know whether the\ncandidate has signed in.\n<p>Returns: …\n"],["password_reset_message","Candidate","Candidate.html#method-i-password_reset_message","(candidate_mailer_text)","<p>get expanded password reset instructions\n<p>Parameters:\n<p><code>:candidate_mailer_text</code> expands instructions\n"],["paul_kristoff","Object","Object.html#method-i-paul_kristoff","()",""],["perform","ExportExcelCandJob","ExportExcelCandJob.html#method-i-perform","(cand_id, sheet, candidate_columns, _dir)","<p>called with perform_async\n<p>Parameters:\n<p><code>:cand_id</code> id of candidate being processed\n"],["perform","ExportExcelJob","ExportExcelJob.html#method-i-perform","(type, admin)","<p>called with perform_async\n<p>Parameters:\n<p><code>:type</code> type of export to excel with or without pictures\n"],["perform","SendEmailJob","SendEmailJob.html#method-i-perform","(candidate, text, admin, test = false)","<p>Is this being used\n<p>Parameters:\n<p><code>:candidate</code> To\n"],["perform","SendResetEmailJob","SendResetEmailJob.html#method-i-perform","(_candidate, type)","<p>Is this being used\n<p>Parameters:\n<p><code>:candidate</code> Candidate\n"],["permitted_params","BaptismalCertificate","BaptismalCertificate.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["permitted_params","Candidate","Candidate.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["permitted_params","CandidateEvent","CandidateEvent.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["permitted_params","CandidateSheet","CandidateSheet.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["permitted_params","ChristianMinistry","ChristianMinistry.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["permitted_params","ConfirmationEvent","ConfirmationEvent.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p>Array of attributes\n"],["permitted_params","PickConfirmationName","PickConfirmationName.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["permitted_params","RetreatVerification","RetreatVerification.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p>Array of attributes\n"],["permitted_params","ScannedImage","ScannedImage.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p>Array of attributes\n"],["permitted_params","SponsorCovenant","SponsorCovenant.html#method-c-permitted_params","()","<p>Editable attributes\n<p>Returns:\n<p><code>Array</code> of attributes\n"],["persisted?","CandidateImport","CandidateImport.html#method-i-persisted-3F","()","<p>needed to expand _candidate_import.html.erb\n<p>Returns:\n<p><code>Boolean</code> false\n"],["pick_confirmation_name","CommonCandidatesController","CommonCandidatesController.html#method-i-pick_confirmation_name","()","<p>edit pick_confirmation_name information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["pick_confirmation_name_file_params","ApplicationController","ApplicationController.html#method-i-pick_confirmation_name_file_params","()","<p>TODO: Remove?\n"],["pick_confirmation_name_update","CommonCandidatesController","CommonCandidatesController.html#method-i-pick_confirmation_name_update","()","<p>update pick_confirmation_name information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["pick_confirmation_name_verify","CandidatesController","CandidatesController.html#method-i-pick_confirmation_name_verify","()","<p>edit pick_confirmation_name verify\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["pick_confirmation_name_verify_update","CandidatesController","CandidatesController.html#method-i-pick_confirmation_name_verify_update","()","<p>update pick_confirmation_name verify\n<p>Attributes:\n<p><code>:commit</code> legal values\n"],["pluck_cand_events","PluckCan","PluckCan.html#method-c-pluck_cand_events","()","<p>Gather candidate_events information\n<p>Parameters:\n<p>Returns:\n"],["pluck_candidates","PluckCan","PluckCan.html#method-c-pluck_candidates","(confirmation_event_id = nil)","<p>Calculate status of candidate_event\n<p>Parameters:\n<p><code>:confirmation_event_id</code> The event being edited in\nmass_edit_candidates_event.html.erb …\n"],["post_email","SendGridMail","SendGridMail.html#method-i-post_email","(sg_mail)","<p>Send the email to SendGrid, which will send the email\n<p>Parameters:\n<p><code>:sg_mail</code> An instance of SendGrid::Email …\n"],["post_email","SendGridMailSpec","SendGridMailSpec.html#method-i-post_email","(sg_mail)",""],["process_events","CandidatePDFDocument","CandidatePDFDocument.html#method-i-process_events","()","<p>walk through the events making sure they have all been validated\n"],["range_body","MethodDocRange","MethodDocRange.html#method-i-range_body","()",""],["readonly?","DeviseRails5Helpers::Capybara::Node::Simple","DeviseRails5Helpers/Capybara/Node/Simple.html#method-i-readonly-3F","()","<p>Undefined in Rails 5.0\n"],["redirect_back_mail","AdminsController","AdminsController.html#method-i-redirect_back_mail","(flash_message, default_path, mail_params)","<p>redirect back to request.referer\n<p>Parameters:\n<p><code>:flash_message</code> alert too flash upon redirect\n"],["remove_all_confirmation_events","CandidateImport","CandidateImport.html#method-i-remove_all_confirmation_events","()","<p>Removes all ConfirmationEvent public for TEST - Only\n"],["remove_orphaned_table_rows","CandidateImport","CandidateImport.html#method-i-remove_orphaned_table_rows","()","<p>destroy orphaned rows\n<p>Returns:\n<p><code>CandidateImport</code> self\n"],["render_setup","Object","Object.html#method-i-render_setup","()",""],["reset_database","CandidateImport","CandidateImport.html#method-i-reset_database","()","<p>Reset the database.  End up with only an admin + confirmation events and\nthe candidate vickikristoff …\n"],["reset_database","CandidateImportsController","CandidateImportsController.html#method-i-reset_database","()","<p>Reset the database.  End up with only an admin + confirmation events and\nthe candidate vickikristoff …\n"],["reset_password","SendGridMail","SendGridMail.html#method-i-reset_password","()","<p>Generate and send reset password email\n"],["reset_password_by_token","Candidate","Candidate.html#method-c-reset_password_by_token","(resource_params)","<p>Confirm user account when changing password\n<p>Parameters:\n<p><code>:resource_params</code> parms necessary to change password …\n"],["resource","DeviseHelpers","DeviseHelpers.html#method-i-resource","()",""],["resource","DeviseHelpersAdmin","DeviseHelpersAdmin.html#method-i-resource","()",""],["resource","DeviseHelpersNew","DeviseHelpersNew.html#method-i-resource","()",""],["resource","VisitorsController","VisitorsController.html#method-i-resource","()","<p>Devise method\n<p>Returns:\n<p><code>Candidate</code>\n"],["resource_class","CandidatesController","CandidatesController.html#method-i-resource_class","()",""],["resource_name","CandidatesController","CandidatesController.html#method-i-resource_name","()","<p>Since going around devise mechanisms - add some helpers back in.\n"],["resource_name","DeviseHelpers","DeviseHelpers.html#method-i-resource_name","()",""],["resource_name","DeviseHelpersAdmin","DeviseHelpersAdmin.html#method-i-resource_name","()",""],["resource_name","DeviseHelpersNew","DeviseHelpersNew.html#method-i-resource_name","()",""],["respond_with","Dev::PasswordsController","Dev/PasswordsController.html#method-i-respond_with","(*args)","<p>creates flash\n<p>Parameters:\n<p><code>:args</code> args is a Candidate\n"],["retreat","ExportListsController","ExportListsController.html#method-i-retreat","()","<p>downloads spreadsheet for event retreat per candidate\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["retreat_external_verification","Candidate","Candidate.html#method-c-retreat_external_verification","()","<p>retreat needs admin verification\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["retreat_verification","CandidatePDFDocument","CandidatePDFDocument.html#method-i-retreat_verification","()","<p>Generate retreat verification\n"],["returns?","MethodDocRange","MethodDocRange.html#method-i-returns-3F","()",""],["revert_confirmation_event","AppFactory","AppFactory.html#method-c-revert_confirmation_event","(event_name)","<p>destroy candidate_event from candidates.\n<p>Parameters:\n<p><code>:event_name</code> options for a new Admin\n"],["route","CandidateEvent","CandidateEvent.html#method-i-route","()","<p>mapping from confirmation event name to a routing symbol\n<p>Returns:\n<p><code>Symbol</code>\n"],["save","Object","Object.html#method-i-save","(candidate_import, uploaded_file)",""],["second_param_and_arg_name","ParmNameDoesNotMatchArgumentNameController","ParmNameDoesNotMatchArgumentNameController.html#method-i-second_param_and_arg_name","(same, arg2)","<p>Second Parameter does not match second argument\n<p>Parameters:\n<p><code>:same</code> First Parameter\n"],["section_class","MailPart","MailPart.html#method-i-section_class","()","<p>output whether to show or hide div\n<p>Returns:\n<p><code>:String</code>\n"],["section_id","MailPart","MailPart.html#method-i-section_id","()","<p>section tag attribute\n<p>Returns:\n<p><code>:String</code>\n"],["send_email","SendGridMail","SendGridMail.html#method-i-send_email","(subject_mail_part, attach_file, body_mail_part, email_type, delivery_call, test_subject = nil)","<p>Generates and sends the email\n<p>Parameters:\n<p><code>:subject_mail_part</code> The subject of the email put in by the\nadmin …\n"],["send_email_admin","SendGridMail","SendGridMail.html#method-i-send_email_admin","(subject_mail_part, body_mail_part, attach_file_path)","<p>Send error message to admin.\n<p>Parameters:\n<p><code>:subject_mail_part</code> email subject\n"],["send_on_create_confirmation_instructions","Candidate","Candidate.html#method-i-send_on_create_confirmation_instructions","()","<p>turn off sending verify instructions until admin sends it.\n"],["send_reset_password_instructions","Candidate","Candidate.html#method-i-send_reset_password_instructions","()","<p>This comes via devise/password_controller The user has clicked on the\nForgot Password link on the sign …\n"],["set_confirmation_events","AdminsController","AdminsController.html#method-i-set_confirmation_events","()","<p>sorts and sets @confirmation_events\n"],["setup_adhoc_render","AdminsController","AdminsController.html#method-i-setup_adhoc_render","(body_input_input, subject_input)","<p>setup for adhoc email\n<p>Parameters:\n<p><code>:body_input_input</code> body of text\n"],["setup_adhoc_render_default","AdminsController","AdminsController.html#method-i-setup_adhoc_render_default","()","<p>setup default values for adhoc mailing\n"],["setup_candidate","Object","Object.html#method-i-setup_candidate","(data)",""],["setup_message_info","CandidatesMailer","CandidatesMailer.html#method-i-setup_message_info","(candidate_mailer_text)","<p>Set @candidate_mailer_text\n<p>Parameters:\n<p><code>:candidate_mailer_text</code> CandidateMailerText\n"],["setup_monthly_mailing_render","AdminsController","AdminsController.html#method-i-setup_monthly_mailing_render","(subject, pre_late_input, pre_coming_due_input, completed_awaiting_input, completed_input, closing_input, salutation_input, from_input, selected_ids = [])","<p>setup for monthly mass mailing\n<p>Parameters:\n<p><code>:subject</code>  subject of message\n"],["setup_monthly_mailing_render_default","AdminsController","AdminsController.html#method-i-setup_monthly_mailing_render_default","(selected_ids = [])","<p>setup default values for monthly mass mailing\n<p>Parameters:\n<p><code>:selected_ids</code>  Optional\n"],["setup_unknown_missing_events","ViewsHelpers","ViewsHelpers.html#method-i-setup_unknown_missing_events","()",""],["show","AdminsController","AdminsController.html#method-i-show","()","<p>show admin\n<p>Attributes:\n<p><code>:id</code> admin id\n"],["show","CandidatesController","CandidatesController.html#method-i-show","()","<p>show candidate\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["show","Dev::CandAccountConfirmationsController","Dev/CandAccountConfirmationsController.html#method-i-show","()","<p>Confirms user(account) copied from parent class\n<p>Attributes\n<p><code>confirmation_token</code> - Token from email link\n"],["show","Dev::CandidatesController","Dev/CandidatesController.html#method-i-show","()","<p>Should never be called\n"],["show_visitor","AdminsController","AdminsController.html#method-i-show_visitor","()","<p>show visitor editable pages for visitor.\n"],["sign_agreement","CommonCandidatesController","CommonCandidatesController.html#method-i-sign_agreement","()","<p>edit sign_agreement information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["sign_agreement_update","CommonCandidatesController","CommonCandidatesController.html#method-i-sign_agreement_update","()","<p>update sign_agreement information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["sign_agreement_verify","CommonCandidatesController","CommonCandidatesController.html#method-i-sign_agreement_verify","()","<p>edit sign_agreement_verify information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["sign_agreement_verify_update","CommonCandidatesController","CommonCandidatesController.html#method-i-sign_agreement_verify_update","()","<p>update sign_agreement_verify information\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["sign_up","RegistrationsController","RegistrationsController.html#method-i-sign_up","(_resource_name, _resource)",""],["sign_up_admin_with","Features::SessionHelpers","Features/SessionHelpers.html#method-i-sign_up_admin_with","(email, password, confirmation)",""],["sign_up_candidate_with","Features::SessionHelpers","Features/SessionHelpers.html#method-i-sign_up_candidate_with","(account_name, first_name, middle_name, last_name, email, password, confirmation)",""],["signin_admin","Features::SessionHelpers","Features/SessionHelpers.html#method-i-signin_admin","(email, password)",""],["signin_candidate","Features::SessionHelpers","Features/SessionHelpers.html#method-i-signin_candidate","(account_name, password)",""],["sort_column","ApplicationHelper","ApplicationHelper.html#method-i-sort_column","(sort_column)","<p>private - test only Sort direction\n<p>Parameters:\n<p><code>:sort_column</code>\n"],["sort_direction","ApplicationHelper","ApplicationHelper.html#method-i-sort_direction","(direction)","<p>Sort direction\n<p>Parameters:\n<p><code>:direction</code>\n"],["sortable","ApplicationHelper","ApplicationHelper.html#method-i-sortable","(column, title, route, confirmation_event_id = '')","<p>return link for sortable column\n<p>Parameters:\n<p><code>:column</code>\n"],["sponsor","ExportListsController","ExportListsController.html#method-i-sponsor","()","<p>downloads spreadsheet for event sponsor per candidate\n<p>Returns:\n<p><code>send_data</code> for spreadsheet\n"],["sponsor_covenant","CandidatePDFDocument","CandidatePDFDocument.html#method-i-sponsor_covenant","()","<p>Generate Sponsor covenant\n"],["sponsor_eligibility_file_params","ApplicationController","ApplicationController.html#method-i-sponsor_eligibility_file_params","()",""],["sponsor_external_verification","Candidate","Candidate.html#method-c-sponsor_external_verification","()","<p>sponsor needs admin verification\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["start_comment","MethodDocRange","MethodDocRange.html#method-i-start_comment","()",""],["start_new_year","CandidateImport","CandidateImport.html#method-i-start_new_year","()","<p>Clear DB out for starting a new year.\n"],["start_new_year","CandidateImportsController","CandidateImportsController.html#method-i-start_new_year","()","<p>Starts new school year\n"],["started?","CandidateEvent","CandidateEvent.html#method-c-started-3F","(due_date)","<p>Has the event been started\n<p>Parameters:\n<p><code>:due_date</code> Date: The due_date -if nil then not started.\n"],["started?","CandidateEvent","CandidateEvent.html#method-i-started-3F","()","<p>Has the event been started\n<p>Returns:\n<p><code>Boolean</code>\n"],["starts_with_empty_comment?","MethodDocRange","MethodDocRange.html#method-i-starts_with_empty_comment-3F","()",""],["status","CandidateEvent","CandidateEvent.html#method-c-status","(due_date, completed_date, verified)","<p>What is the status of this event.\n<p>Parameters:\n<p><code>:due_date</code> Date: The due_date -if nil then not started.\n"],["status","CandidateEvent","CandidateEvent.html#method-i-status","()","<p>What is the status of this event.\n<p>Returns:\n<p><code>String</code>\n"],["status","PluckCan","PluckCan.html#method-i-status","(cand_id, event_name, _attending)","<p>Calcuate status of candidate_event\n<p>Parameters:\n<p><code>:cand_id</code> Candidate id.\n"],["status_code","DummyGoodResponse","DummyGoodResponse.html#method-i-status_code","()",""],["sub_validate","EventCompleteValidator","EventCompleteValidator.html#method-i-sub_validate","(sub_association, attributes)","<p>Validate association of association\n<p>Parameters:\n<p><code>:sub_association</code>\n"],["subject_for","CustomDeviseMailer","CustomDeviseMailer.html#method-i-subject_for","(key)","<p>default subjects for enail messages\n<p>Parameters:\n<p><code>:key</code> legal values\n"],["text","SendGridMail","SendGridMail.html#method-i-text","(delivery)","<p>Generates email body with expansion\n<p>Parameters:\n<p><code>:delivery</code> SendGrid\n"],["text_area_name","MailPart","MailPart.html#method-i-text_area_name","()","<p>name of input\n<p>Returns:\n<p><code>:String</code>\n"],["title_page","CandidatePDFDocument","CandidatePDFDocument.html#method-i-title_page","()","<p>Generate title page\n"],["to_email","CandidateSheet","CandidateSheet.html#method-i-to_email","()","<p>Attempts to guarentee that there is always a &#39;to&#39; email\n\n<pre>1. if candidate_email is not nil then ...</pre>\n"],["to_hash","OfflineResponse","OfflineResponse.html#method-i-to_hash","()",""],["to_s","MethodDocRange","MethodDocRange.html#method-i-to_s","()",""],["to_xlsx","CandidateImport","CandidateImport.html#method-i-to_xlsx","(dir, from_spec = false)","<p>exporting the DB tables to excel.\n<p>Parameters:\n<p><code>:dir</code> String:  where to store the zip file.\n"],["transient_columns","CandidateImport","CandidateImport.html#method-c-transient_columns","()",""],["unused_argument","ParmNameDoesNotMatchArgumentNameController","ParmNameDoesNotMatchArgumentNameController.html#method-i-unused_argument","(same, _arg2)","<p>Legal unused argument\n<p>Parameters:\n<p><code>:same</code> First Parameter\n"],["up","AddAttendRetreat","AddAttendRetreat.html#method-i-up","()",""],["up","AddCandidateInformationSheet","AddCandidateInformationSheet.html#method-i-up","()",""],["up","AddChristianMinistryEvent","AddChristianMinistryEvent.html#method-i-up","()",""],["up","AddColumnFirstCommAtStmm","AddColumnFirstCommAtStmm.html#method-i-up","()",""],["up","AddConfirmableToDevise","AddConfirmableToDevise.html#method-i-up","()","<p>Note: You can&#39;t use change, as Candidate.update_all will fail in the\ndown migration\n"],["up","AddConfirmationName","AddConfirmationName.html#method-i-up","()",""],["up","AddCovenantAgreement","AddCovenantAgreement.html#method-i-up","()",""],["up","AddParentInformationMeeting","AddParentInformationMeeting.html#method-i-up","()",""],["up","AddPickConfirmationNameEvent","AddPickConfirmationNameEvent.html#method-i-up","()",""],["up","AddSponsorCandidateConfirmationEvent","AddSponsorCandidateConfirmationEvent.html#method-i-up","()",""],["up","AddSponsorCovenant","AddSponsorCovenant.html#method-i-up","()",""],["up","BaptismalCertificate","BaptismalCertificate.html#method-i-up","()",""],["up","ChangeDefaultValueOfBaptizedAtStmm","ChangeDefaultValueOfBaptizedAtStmm.html#method-i-up","()",""],["up","ChangeEventNameSponsorCovenant","ChangeEventNameSponsorCovenant.html#method-c-up","()",""],["up","CreateVisitors","CreateVisitors.html#method-c-up","()",""],["up","RemoveConfirmationFromCandidates","RemoveConfirmationFromCandidates.html#method-i-up","()",""],["up","RenameFillOutCandidateInformationSheet","RenameFillOutCandidateInformationSheet.html#method-i-up","()",""],["up","RenamePickConfirmationName","RenamePickConfirmationName.html#method-i-up","()",""],["up","RenameSignAgreement","RenameSignAgreement.html#method-i-up","()",""],["up","RenameUploadBaptismalCertificate","RenameUploadBaptismalCertificate.html#method-i-up","()",""],["update","CandidatesController","CandidatesController.html#method-i-update","()","<p>update candidate - only update password if filled in\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["update","Dev::PasswordsController","Dev/PasswordsController.html#method-i-update","()","<p>setup account_confirmed for super call\n"],["update_baptismal_certificate","Object","Object.html#method-i-update_baptismal_certificate","(with_values)",""],["update_christian_ministry","Object","Object.html#method-i-update_christian_ministry","(with_values)",""],["update_event","Object","Object.html#method-i-update_event","(candidate, completed_date, verified, event_name)",""],["update_multiple_confirmation_events","AdminsController","AdminsController.html#method-i-update_multiple_confirmation_events","()","<p>updates ConfirmationEvents\n<p>Attributes:\n<p><code>:commit</code> “Update” using <code>:confirmation_events</code>\n"],["update_pick_confirmation_name","Object","Object.html#method-i-update_pick_confirmation_name","(with_values)",""],["update_resource","RegistrationsController","RegistrationsController.html#method-i-update_resource","(resource, params)","<p>update resource\n<p>Parameters:\n<p><code>:resource</code> being updated\n"],["update_sponsor_covenant","Object","Object.html#method-i-update_sponsor_covenant","(with_values)",""],["update_visitor","AdminsController","AdminsController.html#method-i-update_visitor","()","<p>update visitor editable pages for visitor.\n<p>Attributes:\n<p><code>:commit</code>  subject of message\n"],["upload_sponsor_eligibility_image","CommonCandidatesController","CommonCandidatesController.html#method-i-upload_sponsor_eligibility_image","()","<p>send_image scanned_eligibility image if saved\n<p>Attributes:\n<p><code>:id</code> Candidate id\n"],["valid_parameters_bc","Object","Object.html#method-i-valid_parameters_bc","(id)",""],["valid_parameters_rv","Object","Object.html#method-i-valid_parameters_rv","(id)",""],["valid_parameters_sc","Object","Object.html#method-i-valid_parameters_sc","(id)",""],["valid_parameters_sc_eligibility","Object","Object.html#method-i-valid_parameters_sc_eligibility","(id)",""],["validate","EventCompleteValidator","EventCompleteValidator.html#method-i-validate","(attributes, other_attributes = [])","<p>Calcuate status of candidate_event\n<p>Parameters:\n<p><code>:attributes</code>\n"],["validate_creation_complete","Candidate","Candidate.html#method-i-validate_creation_complete","(association_class)","<p>Validate if association_class event is complete by adding validation errors\nto active record\n<p>Parameters: …\n"],["validate_creation_complete","CandidateSheet","CandidateSheet.html#method-i-validate_creation_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code> If true …\n"],["validate_creation_complete","CandidateSheet","CandidateSheet.html#method-c-validate_creation_complete","(candidate)","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:candidate</code> owner …\n"],["validate_either","EventCompleteValidator","EventCompleteValidator.html#method-i-validate_either","(attributes, other_attributes)","<p>if either set passes for having all its attributes present then everything\nis OK\n<p>Parameters:\n<p><code>:attributes</code> …\n"],["validate_email","CandidateSheet","CandidateSheet.html#method-i-validate_email","(email)","<p>Validate if email is a valid email addrress.\n<p>Parameters:\n<p><code>:email</code> String\n"],["validate_emails","CandidateSheet","CandidateSheet.html#method-i-validate_emails","()","<p>Validate if email addrresses are either nil or a valid email syntax.\n"],["validate_event_complete","Address","Address.html#method-i-validate_event_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code>\n"],["validate_event_complete","BaptismalCertificate","BaptismalCertificate.html#method-i-validate_event_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code>\n"],["validate_event_complete","BaptismalCertificate","BaptismalCertificate.html#method-c-validate_event_complete","(candidate)","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:candidate</code> owner …\n"],["validate_event_complete","Candidate","Candidate.html#method-i-validate_event_complete","(association_class)","<p>Validate if association_class event is complete by adding validation errors\nto active record\n<p>Parameters: …\n"],["validate_event_complete","CandidateSheet","CandidateSheet.html#method-c-validate_event_complete","(candidate)","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:candidate</code> owner …\n"],["validate_event_complete","CandidateSheet","CandidateSheet.html#method-i-validate_event_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code> If true …\n"],["validate_event_complete","ChristianMinistry","ChristianMinistry.html#method-c-validate_event_complete","(candidate)","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:candidate</code> owner …\n"],["validate_event_complete","ChristianMinistry","ChristianMinistry.html#method-i-validate_event_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code> If true …\n"],["validate_event_complete","PickConfirmationName","PickConfirmationName.html#method-i-validate_event_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code>\n"],["validate_event_complete","PickConfirmationName","PickConfirmationName.html#method-c-validate_event_complete","(candidate)","<p>Validate whether event is complete by adding validation errors to active\nrecord\n<p>Parameters:\n<p><code>:candidate</code> …\n"],["validate_event_complete","RetreatVerification","RetreatVerification.html#method-c-validate_event_complete","(candidate)","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:candidate</code> owner …\n"],["validate_event_complete","RetreatVerification","RetreatVerification.html#method-i-validate_event_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code>\n"],["validate_event_complete","SponsorCovenant","SponsorCovenant.html#method-c-validate_event_complete","(candidate)","<p>Validate whether event is complete by adding validation errors to active\nrecord\n<p>Parameters:\n<p><code>:candidate</code> …\n"],["validate_event_complete","SponsorCovenant","SponsorCovenant.html#method-i-validate_event_complete","(_options = {})","<p>Validate if event is complete by adding validation errors to active record\n<p>Parameters:\n<p><code>:options</code>\n"],["validate_other_info","BaptismalCertificate","BaptismalCertificate.html#method-i-validate_other_info","()","<p>This validates all the information needed when St. MM does not have the\nbaptismal certificate\n<p>Returns: …\n"],["verifiable_info","BaptismalCertificate","BaptismalCertificate.html#method-i-verifiable_info","(candidate)","<p>information to be verified by admin\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["verifiable_info","Candidate","Candidate.html#method-i-verifiable_info","(_candidate)","<p>information to be verified by admin\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["verifiable_info","CandidateEvent","CandidateEvent.html#method-i-verifiable_info","()","<p>information to be verified by admin\n<p>Returns:\n<p><code>Hash</code> of information to be verified\n"],["verifiable_info","CandidateSheet","CandidateSheet.html#method-i-verifiable_info","(_candidate)","<p>information to be verified by admin\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["verifiable_info","ChristianMinistry","ChristianMinistry.html#method-i-verifiable_info","(_candidate)","<p>information to be verified by admin\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["verifiable_info","PickConfirmationName","PickConfirmationName.html#method-i-verifiable_info","(_candidate)","<p>information to be verified by admin\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["verifiable_info","RetreatVerification","RetreatVerification.html#method-i-verifiable_info","(_candidate)","<p>information to be verified by admin\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["verifiable_info","SponsorCovenant","SponsorCovenant.html#method-i-verifiable_info","(_candidate)","<p>information to be verified by admin\n<p>Parameters:\n<p><code>:candidate</code> owner of this association\n"],["verified","PluckCan","PluckCan.html#method-i-verified","()","<p>verified\n<p>Returns:\n<p><code>Boolean</code>\n"],["vicki_kristoff","Object","Object.html#method-i-vicki_kristoff","()",""],["will_save_change_to_email?","Candidate","Candidate.html#method-i-will_save_change_to_email-3F","()","<p>5.0 hack with devise\n"],["xlsx_columns","CandidateImport","CandidateImport.html#method-i-xlsx_columns","()","<p>test only gets columns\n<p>Returns:\n<p><code>CandidateImport</code> self\n"],["xlsx_conf_event_columns","CandidateImport","CandidateImport.html#method-i-xlsx_conf_event_columns","()","<p>test only Conifirmation Event columns\n<p>Returns:\n<p><code>Array</code> String\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source &#39;rubygems.org&#39; ruby &#39;2.5.1&#39; gem &#39;axlsx&#39;, …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GIT\n\n<pre>remote: git://github.com/sinatra/sinatra.git\nrevision: b801c6b76b89eb071e2b01700273054bbe8aae05\nbranch: ...</pre>\n"],["Procfile","","Procfile.html","","<p>web: bundle exec puma -t 5:5 -e ${RACK_ENV:-development}\n"],["README","","README.html","","<p>Confirmation\n<p>\n<p>Rails Composer is supported by developers who purchase our RailsApps\ntutorials. Need help? …\n"],["README","","README_md.html","","<p>Confirmation\n<p>v0.1\nFeatures:\n* devise implementation for candidate &amp; admin\n* Home\npage\n* About page ...\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["app.json","","app_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;Confirmation&quot;,\n&quot;description&quot;: &quot;Starter application generated by Rails Composer&quot;,\n&quot;logo&quot;: &quot;https://avatars3.githubusercontent.com/u/788200&quot;, ...</pre>\n"],["application.js","","app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["candidate_imports_controller.coffee","","app/assets/javascripts/candidate_imports_controller_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["registrations.coffee","","app/assets/javascripts/registrations_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["tablesorter.js.coffee","","app/assets/javascripts/tablesorter_js_coffee.html","","<p>$(document).ready -&gt;\n\n<pre>$ -&gt;\n  textMatcher = (e, n, f, i, $r, c, data) -&gt;\n    e.toLowerCase() == f.toLowerCase() ...</pre>\n"],["toggle.js","","app/assets/javascripts/toggle_js.html","","\n<pre class=\"ruby\"><span class=\"ruby-constant\">Created</span> <span class=\"ruby-identifier\">by</span> <span class=\"ruby-identifier\">paulkristoff</span> <span class=\"ruby-identifier\">on</span> <span class=\"ruby-value\">9</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">1</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">16</span>\n</pre>\n<p>update_completed_date = function ( my_id ) {\n\n<pre>var comp_id       = my_id.replace( ...</pre>\n"],["1st_load_framework.css.scss","","app/assets/stylesheets/1st_load_framework_css_scss.html","","<p>// import the CSS framework @import “bootstrap-sprockets”; @import\n“bootstrap”;\n<p>// …\n"],["application.css.scss","","app/assets/stylesheets/application_css_scss.html","","\n<pre> This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\n ...</pre>\n"],["candidate_imports_controller.scss","","app/assets/stylesheets/candidate_imports_controller_scss.html","","<p>// Place all the styles related to the CandidateImportsController\ncontroller here. // They will automatically …\n"],["registrations.scss","","app/assets/stylesheets/registrations_scss.html","","<p>// Place all the styles related to the Registrations controller here. //\nThey will automatically be included …\n"],["simple-sidebar.css","","app/assets/stylesheets/simple-sidebar_css.html","","\n<pre>!\n Start Bootstrap - Simple Sidebar HTML Template (http://startbootstrap.com)\n Code licensed under the ...</pre>\n"],["config.ru","","config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require ::File.expand_path(&#39;../config/environment&#39;, …\n"],["404.html","","public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["favicon.ico","","public/favicon_ico.html","",""],["humans","","public/humans_txt.html","","\n<pre class=\"ruby\"><span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">humans</span> <span class=\"ruby-identifier\">responsible</span> <span class=\"ruby-operator\">&amp;</span> <span class=\"ruby-identifier\">colophon</span>   \n<span class=\"ruby-identifier\">humanstxt</span>.<span class=\"ruby-identifier\">org</span>\n</pre>\n<p>/* TEAM */\n\n<pre>&lt;your title&gt;: &lt;your name&gt;\nSite:\nTwitter: ...</pre>\n"],["robots","","public/robots_txt.html","","<p># See www.robotstxt.org/robotstxt.html for documentation on how to use the\nrobots.txt file # # To ban …\n"],["temp","","tmp/temp_txt.html","","<p>Ioana,\n<p>These are past due. Please complete.\n<p>Late events These are coming due.\n"],["tinymce.min.js","","vendor/assets/javascripts/tinymce_min_js.html","","<p>// 4.8.1 (2018-07-26)\n<p>!function(){“use strict”;var e,t,n,r,o,i,a,u,s,c,l,f,d,m,g,p,h,v=function(){for(var … &mdash; "]]}}